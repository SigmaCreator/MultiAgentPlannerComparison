<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"> <title>Release Notes for Allegro CL 8.0</title></head><link rel="stylesheet" href="acldoc-styles.css" type="text/css"><body><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="introduction.htm#updates-s"></a></small></td></tr></table><h1 id="2">Release Notes for Allegro CL 8.0</h1><p id="3">This document contains the following sections:</p><a href="#relnotes-intro-1">1.0 Introduction</a><br><a href="#post80-info-1">2.0 Information on changes and new stuff since the 8.0 release</a><br><a href="#fasl-incompat-1">3.0 Fasl files are not-compatible between versions and operating systems</a><br>&nbsp;&nbsp;&nbsp;<a href="#version-fasl-incompat-2">3.1 All pre-8.0 Lisp compiled files must be recompiled (old fasl files will not load)</a><br>&nbsp;&nbsp;&nbsp;<a href="#os-fasl-incompat-2">3.2 Fasl files may be incompatible in different Lisps on same hardware</a><br><a href="#install-1">4.0 Release Notes for installation</a><br><a href="#platform-specific-1">5.0 Release notes for specific platforms</a><br>&nbsp;&nbsp;&nbsp;<a href="#sparc-patch-2">5.1 OS patch needed for Solaris 2.8 on Sparcs</a><br>&nbsp;&nbsp;&nbsp;<a href="#ps-alpha-2">5.2 HP Alpha running Tru64: default stack size should be increased</a><br>&nbsp;&nbsp;&nbsp;<a href="#hpux11-2">5.3 Notes of increasing the default maximum stack size on HP-UX 11 machines</a><br>&nbsp;&nbsp;&nbsp;<a href="#macosx-2">5.4 Mac OS X notes</a><br>&nbsp;&nbsp;&nbsp;<a href="#heap-start-2">5.5 Heap start locations</a><br><a href="#acl-1">6.0 Release Notes for the base Lisp</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-new">6.1 New features in the base Lisp</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#acl-added-in-70">6.1.1 Features added to Allegro CL 7.0 after the initial release of Allegro CL 7.0</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#acl-new-in-80">6.1.2 Major new features in Allegro CL 8.0</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#other-new-3">6.1.3 Other new features in Allegro CL 8.0</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#new-mp-3">6.1.4 Multiprocessing and OS threads in Allegro CL 8.0</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-non-back-2">6.2 Non-backward-compatible changes in the base Lisp</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-other-2">6.3 Other changes to and notes about the base Lisp</a><br>&nbsp;&nbsp;&nbsp;<a href="#acl-platform-specific-2">6.4 Base Lisp platform-specific information</a><br><a href="#clim-1">7.0 Release Notes for CLIM</a><br><a href="#cg-1">8.0 Release Notes for Common Graphics and the IDE</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-significant-new-2">8.1 Significant changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-non-back-2">8.2 Non-backward-compatible changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-win-gtk-2">8.3 Functionality to handle differences between Windows and GTK</a><br>&nbsp;&nbsp;&nbsp;<a href="#cg-other-2">8.4 Other changes in Common Graphics</a><br>&nbsp;&nbsp;&nbsp;<a href="#ide-release-notes-2">8.5 IDE release notes</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#opening-earlier-projects-3">8.5.1 Opening projects from releases prior to 8.0</a><br><a href="#astore-not-supported-1">9.0 AllegroStore not available in Allegro CL 8.0</a><br><a href="#soap-release-1">10.0 Release notes for SOAP</a><br><a href="#rpc-1">11.0 Release notes for Allegro RPC</a><br><a href="#jlinker-1">12.0 Release notes for jLinker</a><br><a href="#aserve-1">13.0 Release notes for AllegroServe</a><br><a href="#misc-products-1">14.0 Release notes for IMAP and SMTP, XMLutils</a><br><a href="#eli-misc-1">15.0 Release notes for The Emacs/Lisp interface</a><br><a href="#clx-1">16.0 Availability of CLX for Allegro CL</a><br><a href="#orblink-1">17.0 Release notes for Orblink</a><br><a href="#app-conformance-proj">Appendix A. Tightening of ANSI Conformance in Allegro CL</a><br><hr><hr><h2 id="4"><a name="relnotes-intro-1">1.0 Introduction</a></h2>

<p id="5">
This document is a copy of the release notes for release 
8.0
of Allegro Common Lisp and related products provided with release 8.1. Many
sections are divided into non-backward-compatible changes (that
produce different behavior in release 8.0
compared to release 7.0) and changes
unrelated to backward-compatibility. Note that a bug fix is <i>not</i>
considered a backward-incompatible change even if it does result in
changed behavior because the previous behavior was erroneous.
</p>



<p id="6">
This document describes the changes, major and minor, from 7.0 to 8.0.
Please look particularly at these sections:
</p>

<ul>

<li id="7">
<a href="#acl-new">Section 6.1 New features in the base Lisp</a>: this section describes new
features.
</li>
<li id="8">
<a href="#acl-non-back-2">Section 6.2 Non-backward-compatible changes in the base Lisp</a>: this very important
section describes changes to Allegro CL which are <b>not</b> backward
compatible. You may have to modify your source code in light of these
changes.
</li>
<li id="9">

<a href="#cg-non-back-2">Section 8.2 Non-backward-compatible changes in Common Graphics</a>: [Common Graphics is not
available on all platforms] this section describes changes to Common
Graphics which are <b>not</b> backward compatible. You may have to
modify your source code in light of these changes.

</li>
<li id="10">

<a href="#astore-not-supported-1">Section 9.0 AllegroStore not available in Allegro CL 8.0</a>: the
AllegroStore database product is not available in release
8.0. Instead, AllegroCache is provided as a database product.

</li>
<li id="11">
<a href="#post80-info-1">Section 2.0 Information on changes and new stuff since the 8.0 release</a>: this section describes
material added after the initial Allegro CL 8.0 release, along with
other post-8.0 changes.
</li>

</ul>

<p id="12">
If you notice changed or unexpected behavior with an operator,
variable, class, or facility, search for its name in this document to
see whether there is an entry concerning it.
</p>

<hr><hr><h2 id="13"><a name="post80-info-1">2.0 Information on changes and new stuff since the 8.0 release</a></h2>

<p id="14">
This section describes features added after the initial release of
Allegro CL 8.0. (This includes additions as of March 31, 2007. See
the actual 8.0 Release Notes for later changes, if any.)
</p>

<ol>
<li id="15">

<b>New features in SSL socket support</b>. Allegro CL has for some
time supported SSL (Secure Socket Layer) sockets. See the section
<a href="socket.htm#ssl-1">Secure Socket Layer
(SSL)</a> in <a href="socket.htm">socket.htm</a>. An update released
in late March, 2007, enhances this facility to support processing of
certificates. The argument lists to <a href="operators/socket/make-ssl-client-stream.htm"><b>make-ssl-client-stream</b></a> and <a href="operators/socket/make-ssl-server-stream.htm"><b>make-ssl-server-stream</b></a> have
been augmented to support the new feature. New methods, <a href="operators/socket/get-ssl-peer-certificate.htm"><b>get-ssl-peer-certificate</b></a>,
<a href="operators/socket/get-ssl-verify-result.htm"><b>get-ssl-verify-result</b></a>,
and <a href="operators/socket/ssl-do-handshake.htm"><b>ssl-do-handshake</b></a>
have been added. <a href="operators/socket/get-ssl-peer-certificate.htm"><b>get-ssl-peer-certificate</b></a> allows
accessing and working with X.509 certificates. A new <a href="classes/socket/x509-certificate.htm"><code>x509-certificate</code></a> class
defines objects corresponding to X.509 certificates.

</li>
<li id="16">

<b>jLinker update has changes to jlinker-init and
jlinker-listen</b>. <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> now has an
<i>end-function</i> keyword argument which, if supplied,
should name a function that will be called when jLinker stops. <a href="operators/jlinker/jlinker-listen.htm"><b>jlinker-listen</b></a> now
behaves differently when <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> fails: before
<a href="operators/jlinker/jlinker-listen.htm"><b>jlinker-listen</b></a>
would exit when <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> failed. Now, the
function specified as the value of the
<i>process-function</i> is called and it is its
responsibility to decide whether to stop or continue when <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> returns a
failure message. These changes were made in an update released in
February, 2007.

</li>
<li id="17">
<b>Daylight saving time changes</b>. As of a patch released in
February, 2007, Allegro CL finds out whether daylight ssaving time is
or ois not in effect by asking the operating system. The variable
<a href="variables/excl/s_daylight-saving-time-observed_s.htm"><code>*daylight-saving-time-observed*</code></a> is now ignored.
(However, some operating systems have not been updated to reflect the
new United States DST schedules which go into effect in 2007 (with DST
starting on March 11, 2007). Allegro CL schedules have been
updated. You can use the old system with the updated schedules if you
set the unexported variable
<b><code>excl::*use-us-daylight-saving-time*</code></b> to
true. Then the variable <a href="variables/excl/s_daylight-saving-time-observed_s.htm"><code>*daylight-saving-time-observed*</code></a> will have
effect. But when your OS is updated to have correct DST information,
you should use that.)
</li>
<li id="18">
<b>New rpc update</b>. An update to Allegro RPC was released in January,
2007. The changes included adding a <i>kill</i> argument
to <a href="operators/rpc/client-exit.htm"><b>client-exit</b></a>, modifying
<a href="operators/rpc/client-exit.htm"><b>client-exit</b></a> to kill a
process on a remote host, and revising symbol handling in remote
references. The documentation was also updated, with significant
changes particularly to the description of <a href="operators/rpc/run-other-client.htm"><b>run-other-client</b></a>. See
<a href="rpc.htm">rpc.htm</a> for information on RPC in Allegro CL.
</li>
<li id="19">
<b>New :anynl value for eol-convention for input-streams</b>. The
function <a href="operators/excl/eol-convention.htm"><b>eol-convention</b></a>
returns and (with <a href="../ansicl/dictentr/setfpset.htm"><b>setf</b></a>) allows
setting the End of Line convention used by a stream. You may now set
the value to <b><code>:anynl</code></b>, which will result 
in any standard end of
line convention being read correctly on input (the UNIX convention of
a linefeed, the DOS convention of a carriage-return linefeed, or the
Mac convention of a carriage-return). See the description of <a href="operators/excl/eol-convention.htm"><b>eol-convention</b></a> for details and a
discussion of what is done for output files.
</li>
<li id="20">
<b>Variable net.uri:*strict-parse* allows parsing of some URIs that
are non-compliant</b>. RFC2396 specifies the format for URIs but many
websites do not strictly follow its rules. The variable <a href="variables/uri/s_strict-parse_s.htm"><code>*strict-parse*</code></a> controls how
strictly the parser observes syntax rules and, when <code>nil</code>, allows parsing of many URIs which are actually
non-compliant. See <a href="uri.htm">uri.htm</a> for details of URI
support.
</li>
<li id="21">
<b>New net.mail package and interface for parsing and validating email
addresses</b>. An update released about December 21, 2006 provides two
functions in the new net.mail package: <a href="imap.htm#parse-email-address-op-bookmarkxx"><b>parse-email-address</b></a>
and <a href="imap.htm#valid-email-domain-p-op-bookmarkxx"><b>valid-email-domain-p</b></a>. The first (broadly
following <a href="http://www.ietf.org/rfc/rfc2822.txt">RFC2822</a>)
extracts the username and domain name from an email address while the
second tries to validate domain names (because many things can go
wrong with email, <a href="imap.htm#valid-email-domain-p-op-bookmarkxx"><b>valid-email-domain-p</b></a> is most useful when
it says a domain is invalid). See <a href="imap.htm#net-mail-1">The net.mail interface for parsing and validating
email addresses</a> in <a href="imap.htm">imap.htm</a> for details.
</li>
<li id="22">
<b>excl:with-underlying-simple-vector exported</b>: the macro <a href="operators/excl/with-underlying-simple-vector.htm"><b>excl:with-underlying-simple-vector</b></a>,
which allows access to the underlying data vector associated with an
array, is now exported and documented. (It has existed as an internal
operator for a long time in Allegro CL.)
</li>
<li id="23">
<b>New ISO 8601 date/time module</b>: support for ISO 8601
specifications of dates and times has been added to Allegro CL in an
update released in early August, 2006. See
<a href="date-time.htm">date-time.htm</a> for details. The functions <a href="operators/excl/locale-format-time.htm"><b>locale-format-time</b></a> and <a href="operators/excl/locale-print-time.htm"><b>locale-print-time</b></a> have also been
modified to accept date-time objects as well as universal times as
arguments. (The description of <a href="operators/excl/locale-print-time.htm"><b>locale-print-time</b></a> has been updated to reflect
that change and also to revise the <b>field descriptor definitions</b>
(%F, %G, %g, and %P added, %U, %W removed) and the <b>Modified Conversion
Specifications</b> (%OU and %OW removed), the removed
definitions/specs were never in fact supported.)
</li>
<li id="24">
<b>New module provide PAM support on some platforms</b>. The
<b>pam</b> module, released in a mid-August update, provides a Lisp
wrapper around the PAM API on Linux, Solaris, and some other unixlike
operating systems. PAM (Pluggable Authentication Modules) is described
in <a href="http://www.kernel.org/pub/linux/libs/pam/FAQ">www.kernel.org/pub/linux/libs/pam/FAQ</a>. See
<a href="miscellaneous.htm#pam-1">PAM support in Allegro
Common Lisp</a> in <a href="miscellaneous.htm">miscellaneous.htm</a> for
details. PAM is not supported on Windows and some UNIX
platforms. <a href="miscellaneous.htm#pam-1">The PAM
documentation</a> lists the platforms where PAM is not
supported.
</li>
<li id="25">
<b>New FAQ replaces old FAQ</b>. We have a new <a href="http://www.franz.com/support/faq/index.lhtml">FAQ (Frequently
Asked Questions) document</a>. It is only available online (so
you will always see the latest version). It is located at <a href="http://www.franz.com/support/faq/index.lhtml">http://www.franz.com/support/faq/</a>. The
version of our FAQ previously included with the documentation in the
<b>doc/faq/</b> directory has been discontinued and removed (all files
now simply contain a link to the new FAQ).
</li>
<li id="26">
<b>New Emacs-Lisp-Interface command fi:insert-arglist (C-c i)</b>: the
fi:insert-arglist command, when invoked after typing '(&lt;fun&gt; ',
inserts the argument list template into the code being typed. See
<a href="eli.htm#arglists-3">Argument lists</a> in
<a href="eli.htm">eli.htm</a> for details.
<p id="27">
Also, a problem with using Gnu Emacs on Windows compiled with Cygwin
has been fixed.
</p>
</li>
<li id="28">
<b>New optimized variants of read-line</b>. In an update released
around July 11, 2006, two new functions, <a href="operators/excl/simple-stream-read-line.htm"><b>simple-stream-read-line</b></a> and <a href="operators/excl/read-line-into.htm"><b>read-line-into</b></a> were added to provide optimized
variants of <a href="../ansicl/dictentr/read-lin.htm"><b>read-line</b></a>, with
little or no consing and less copying of characters (because the
target strings are provided in the function call). <a href="operators/excl/simple-stream-read-line.htm"><b>simple-stream-read-line</b></a> allows (optionally)
specifying a target string but will create a new string if
necessary. <a href="operators/excl/read-line-into.htm"><b>read-line-into</b></a>
always requires a target string and will use it regardless. It is
therefore always more efficient but it does require correct
bookkeeeping to be used correctly. Both are documented on there own
pages. The <a href="operators/excl/read-line-into.htm"><b>read-line-into</b></a>
page has numerous examples.
</li>
<li id="29">
<b>double-sided option for pop-up-printer-job-dialog</b>. A new
option, <a href="operators/cg/d/double-sided.htm"><b>double-sided</b></a>, has been
added for printer support. See <a href="operators/cg/p/pop-up-printer-job-dialog.htm"><b>pop-up-printer-job-dialog</b></a>.
</li>
<li id="30">
<b>Minor IP address handling upgrade</b>. In a June, 2006 update, the
function <a href="operators/socket/dotted-address-p.htm"><b>dotted-address-p</b></a>
returns true if its argument is a string in dotted IP address
form. See <a href="socket.htm#host-naming-2">Host
naming</a> in <a href="socket.htm">socket.htm</a> where the dotted
form is described with examples.
</li>
<li id="31">
<b>sys:update-allegro now allows specifying proxy username and
password</b>. This change is made in a June, 2006 update. There has
long been a <i>proxy</i> keyword argument to <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a>, the function
that downloads updates and patches for Allegro CL. This argument
allows downloading when using a proxy. However, sometimes the proxy
also needs a username and password. A new keyword argument,
<i>proxy-basic-authorization</i>, allows these to be
specified as well. See <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a>.
</li>
<li id="32">
<b>ntservice facility provided</b>: an update released in early June,
2006 allows you to make your application a service on Windows. See
<a href="delivery.htm#ntservice-app-1">Turning your
application into a Windows Service</a> in
<a href="delivery.htm">delivery.htm</a>. There is an example (after the update
is complete) in <b>examples/ntservice/</b>.
</li>
<li id="33">
<b>A jLinker release in early June, 2006</b>. This update makes
jLinker identical in Allegro CL 7.0 and 8.0. There are changes in
<a href="operators/jlinker/jlinker-listen.htm"><b>jlinker-listen</b></a>
(new :abort value for the <i>stop</i> argument); <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> (new
<i>report</i> keyword argument); <a href="operators/jlinker/def-java-class.htm"><b>def-java-class</b></a> (new possible
value for the name); <a href="operators/jlinker/def-java-constructor.htm"><b>def-java-constructor</b></a>
(documentation clarification); <a href="operators/jlinker/jlinker-slot.htm"><b>jlinker-slot</b></a> (new value for the
<i>key</i> argument); and a new variable <a href="variables/jlinker/s_jlinker-deprecated-warnings_s.htm"><code>*jlinker-deprecated-warnings*</code></a>. (Also
minor changes in <a href="operators/jlinker/jarray-set.htm"><b>jarray-set</b></a>, <a href="operators/jlinker/jdo-call.htm"><b>jdo-call</b></a>, <a href="operators/jlinker/jmake-new.htm"><b>jmake-new</b></a>, <a href="operators/jlinker/jcons.htm"><b>jcons</b></a>, <a href="operators/jlinker/jmeth.htm"><b>jmeth</b></a>, <a href="operators/jlinker/jget-cons.htm"><b>jget-cons</b></a>, <a href="operators/jlinker/jget-meth.htm"><b>jget-meth</b></a>, and <a href="operators/jlinker/jarray-set.htm"><b>jarray-set</b></a>.)
</li>
<li id="34">
<b>New rpc update</b>. An update released in the Spring of 2006 made
some modifications to the rpc module (see <a href="rpc.htm">rpc.htm</a>
for a description of the module. The affected operators were <a href="operators/rpc/client-end-all.htm"><b>client-end-all</b></a> (new
<i>loop</i> optional argument) and <a href="operators/rpc/run-other-client.htm"><b>run-other-client</b></a> (new
<i>line-limit</i> keyword argument). Also, there were
significant documentation changes to <a href="operators/rpc/run-other-lisp.htm"><b>run-other-lisp</b></a> and <a href="operators/rpc/rpc-close.htm"><b>rpc-close</b></a>.
</li>
<li id="35">
<b>New command-line argument +P</b>. An update released in the Spring
of 2006 added the +P command-line argument. If +p (lowercase p)
appears on the command line, +P (uppercase P) undoes its effect. (+p
may be present in the command-line resource for the executable. +P
allows cancelling the +p is such a case.) See <a href="startup.htm#command-line-args-1">Command line
arguments</a> in <a href="startup.htm">startup.htm</a> for a list of
command-line arguments accepted by Allegro CL.
</li>
<li id="36">
<b>A SOAP update was released in late February, 2006</b>. It makes
minor changes and corrections. One
documentation correction should be noted: the default for the
<b>:nillable</b> option (to operators like <a href="soap.htm#soap-message-client-op-bookmarkxx"><b>soap-message-client</b></a>) is
<code>:ignore</code> (making it compatible with earlier
versions). The earlier documentation update incorrectly said the
default was <code>:accept</code>.
</li>
<li id="37">
<b>New support for constructing MIME messages</b>. See <a href="imap.htm#mime-1">MIME support</a> in
<a href="imap.htm">imap.htm</a> for more information. See particularly the
new function <a href="operators/post-office/make-mime-part.htm"><b>make-mime-part</b></a>. <a href="operators/post-office/send-letter.htm"><b>send-letter</b></a>,
<a href="operators/post-office/send-smtp.htm"><b>send-smtp</b></a>, and <a href="operators/post-office/send-smtp-auth.htm"><b>send-smtp-auth</b></a> have been enhanced
to allow files or streams (as well as a string) as the value of the
<i>message</i> argument. <a href="operators/post-office/send-letter.htm"><b>send-letter</b></a> also now accepts an
<i>attachments</i> keyword argument.
</li>
<li id="38">
<b>New support for pipe streams</b>: See <a href="operators/excl/make-pipe-stream.htm"><b>make-pipe-stream</b></a>, <a href="operators/excl/make-function-input-stream.htm"><b>make-function-input-stream</b></a>, and <a href="operators/excl/with-function-input-stream.htm"><b>with-function-input-stream</b></a>. (The new
pipe streams are somewhat more flexible than the one provided by
<a href="os-interface.htm#pipe-op-bookmarkxx"><b>pipe</b></a>.)
</li>
<li id="39">
<b>New function base64-encode-stream</b>. See the description of
<a href="operators/excl/base64-encode-stream.htm"><b>base64-encode-stream</b></a> and see
<a href="miscellaneous.htm#base64-1">Base64
Support</a> in <a href="miscellaneous.htm">miscellaneous.htm</a> for
information on Base64 and Base64 support in Allegro CL.
</li>
<li id="40">
<b>New ability to invoke Lisp within a bat file on Windows</b>. You
can now execute Lisp programs contained within a bat file on Windows
so the bat file will invoke Lisp, run specified forms, and then exit
(optionally pausing before exiting). The function <a href="operators/excl/lisp-to-bat-file.htm"><b>lisp-to-bat-file</b></a> supports this new
facility. It writes an appropriate bat file when given a Lisp file of
forms to execute and provided some additonal information (such as what
image file to use). Also added are two new command-line arguments
<b>--bat</b> and <b>--bat-pause</b>. (See <a href="startup.htm#command-line-args-1">Command line arguments</a> in
<a href="startup.htm">startup.htm</a> for a list of command-line arguments
accepted by Allegro CL.) This <a href="http://www.franz.com/support/tech_corner/windows_scripting.lhtml">Tech
Corner entry</a> talks about the bat file feature and gives an
example.
<p id="41">
Support for this facility was added with a patch released around
1/17/06. See <a href="operators/system/update-allegro.htm"><b>sys:update-allegro</b></a> for information on
getting patches.
</p>
</li>
</ol>

<hr><hr><h2 id="42"><a name="fasl-incompat-1">3.0 Fasl files are not-compatible between versions and operating systems</a></h2>



<hr><h2 id="43"><a name="version-fasl-incompat-2">3.1 All pre-8.0 Lisp compiled files must be recompiled (old fasl files will not load)</a></h2>

<p id="44">
<i>fasl</i> files (compiled Lisp files) created by
releases of Allegro CL prior to 8.0 (including 8.0.beta) will not load
into Allegro CL 8.0. All such files must be recreated by compiling the
associated Lisp source files. An error will be signaled if Lisp
attempts to load an older, incompatible <i>fasl</i>
file.
</p>



<hr><h2 id="45"><a name="os-fasl-incompat-2">3.2 Fasl files may be incompatible in different Lisps on same hardware</a></h2>

<h3 id="46">
Fasl files created on Windows x86 cannot be loaded into Linux or
FreeBSD x86 Lisps
</h3>

<p id="47">
The Windows and UNIX operating systems are too different. However,
FASL files (for the same Lisp version) can generally be shared between
different UNIX operating systems on the same hardware. The general
principles are as follows. Note that incompatibility may creep in for
reasons outside our control. If fasl files are incompatible, recompile
on the target machine.
</p>
<h3 id="48">
Fasl files will usually be compatible between platforms when:
</h3>
<ul>
<li id="49">
the architecture (hardware) is the same
</li>
<li id="50">
the calling convention is the same (that is, the method of calling
functions and the registers they use for arguments are the same)
</li>
<li id="51">
the method for generating signals can be made compatible (this cannot
be done for Windows and UNIX, so they are incompatible for this
reason)
</li>
</ul>
<p id="52">
It is up to the user to ensure that there are no os-specific
dependencies, or that features (i.e. #+/#- ) did not cause
essential code to be excluded or extraneous code introduced
that would cause a problem on the crossed architecture.
</p>



<hr><hr><h2 id="53"><a name="install-1">4.0 Release Notes for installation</a></h2>

<ol>
<li id="54">
&gt;<b>Version 8.0 uses the 7.0 installation procedure</b>:
installation is described in <a href="installation.htm">installation.htm</a>.
</li>
<li id="55">
<b>The distribution includes 8 bit and 16 bit character images</b>
(this information is repeated from earlier Release Notes). Allegro CL
has images that support 8 bit characters only, or 16 bit
characters only. It is our expectation that most users will use the 16
bit images. Executables supplied with the distribution either have or
do not have `8' in the name. Those with 8 in the name (mlisp8 and
alisp8, e.g.) support 8 bit characters. Those without a number in the
name support 16 bit characters. Image (dxl) files also come in 8 and
16 varieties. Again, 8 in the name means 8 bit character
support. Character support for images and executables must
match. Trying to start an executable with the wrong type of image
fails.
</li>

<li id="56">
<b>No prebuilt Allegro Composer images in the distribution</b> 
(this information is repeated from earlier Release Notes). To
create an Allegro Composer image, start Allegro CL and load
<em>buildcomposer.cl</em>. That will produce <em>composer</em> and
<em>composer.dxl</em>, or <em>composer8</em> and
<em>composer8.dxl</em>. Allegro Composer is available on Unix only.
</li>

<li id="57">
<b>No prebuilt Allegro CLIM images in the distribution</b> (this
information is repeated from earlier Release Notes). To create a CLIM
image, start Allegro CL and load <em>buildclim.cl</em>. That will
produce <em>clim</em> and <em>clim.dxl</em>, or <em>clim8</em> and
<em>clim8.dxl</em>.
</li>

</ol>

<hr><hr><h2 id="58"><a name="platform-specific-1">5.0 Release notes for specific platforms</a></h2>

<p id="59">
Allegro CL 8.0 is known to work with the following minimal operating
system versions. Allegro CL 8.0 runs on all operating system versions
released (not in beta or pre-release form) as of December 1, 2005. See
below for places to obtain information on operating systems released
after that date.
</p>
<p id="60">
Note that Allegro CL 8.0 <b>does not run on Windows 98/Me or on Mac OS
X 10.3</b>.
</p>

<h3 id="61">
32-bit platforms
</h3>

<ul>
<li id="62">
HP Tru64 UNIX 5.1 -- see <a href="#ps-alpha-2">Section 5.2 HP Alpha running Tru64: default stack size should be increased</a>
</li>
<li id="63">
HP-UX 11.00 -- see <a href="#hpux11-2">Section 5.3 Notes of increasing the default maximum stack size on HP-UX 11 machines</a>
</li>
<li id="64">
FreeBSD 4.x and 5.x
</li>
<li id="65">
Linux (x86), glibc 2.2
</li>
<li id="66">
Linux (PPC), glibc 2.3
</li>
<li id="67">
Apple Mac OS X 10.4 -- see <a href="#macosx-2">Section 5.4 Mac OS X notes</a>
</li>
<li id="68">
Microsoft Windows 2000/XP/Server 2003
</li>
<li id="69">
IBM AIX 5.1
</li>
<li id="70">
Sun Solaris 2.8 -- see <a href="#sparc-patch-2">Section 5.1 OS patch needed for Solaris 2.8 on Sparcs</a>
</li>
</ul>

<h3 id="71">
64-bit platforms
</h3>

<ul>
<li id="72">
HP Tru64 UNIX 5.1 -- see <a href="#ps-alpha-2">Section 5.2 HP Alpha running Tru64: default stack size should be increased</a>
</li>
<li id="73">
HP-UX 11.00 -- see <a href="#hpux11-2">Section 5.3 Notes of increasing the default maximum stack size on HP-UX 11 machines</a>
</li>
<li id="74">
Apple Mac OS X 10.4 -- see <a href="#macosx-2">Section 5.4 Mac OS X notes</a>
</li>
<li id="75">
Linux (AMD64), glibc 2.3
</li>
<li id="76">
IBM AIX 5.1 
</li>
<li id="77">
Sun Solaris 2.8 on Sparc
</li>
<li id="78">
Sun Solaris 2.10 on AMD 64 
</li>
</ul>

<p id="79">
Franz Inc. cannot maintain the same release schedule as the many
operating system providers on the many platforms we support.  Usually
Allegro Common Lisp and all of its component parts will work on new
Operating System versions that become available after release. But
sometimes Allegro CL patches or operating-system patches, or
installation tweaks, will be required before Lisp will run on an
updated system.
</p>
<p id="80">
Franz Inc. usually finds out about any such issues soon after new
operating system releases appear and devises any necessary patches or
compatibility procedures.  We maintain current information about
operating system versions on this web page: <a href="http://www.franz.com/support/osinfo.lhtml">http://www.franz.com/support/osinfo.lhtml</a>.
We strongly advise you to check that page before updating your
operating system. If we know that the new operating system is
compatible, or is compatible with certain patches, you will find the
information there. Similarly if it is known to be incompatible. If
the new operating system is not yet listed it may be that it has not
yet been tested.
</p>



<hr><h2 id="81"><a name="sparc-patch-2">5.1 OS patch needed for Solaris 2.8 on Sparcs</a></h2>

<p id="82">
A problem with Solaris 2.8 where calls to <a href="operators/excl/run-shell-command.htm"><b>run-shell-command</b></a> can cause Lisp to hang is
fixed by operating system patch 108993-18 (which supersedes the
earlier patch 108827-36 for this problem). On Solaris 8, it can
also be fixed by adding <b>/usr/lib/lwp</b> to the front of your
<code>LD_LIBRARY_PATH</code> environment variable. No fix is
necessary for Solaris 2.9.
</p>
<p id="83">
The patch can be obtained from this Sun website: <a href="http://sunsolve.sun.com/search/document.do?assetkey=1-26-49843-1">http://sunsolve.sun.com/search/document.do?assetkey=1-26-49843-1</a>.
</p>



<hr><h2 id="84"><a name="ps-alpha-2">5.2 HP Alpha running Tru64: default stack size should be increased</a></h2>

<p id="85">
The default stack size limit on an Alpha is 2 Megabytes, which is too
low for
normal stack overflow handling. Doing
</p>
<pre id="86">
 limit stacksize unlimited
</pre>

<p id="87">
in a csh shell seems to allow up to 16 or 32 Mb, and users can
run that command before running Allegro CL. (That command
could be put into a <i>.cshrc</i> file.)
</p>
<p id="88">
However, that only solves the problem for Allegro CL processes that
are started from within that shell. You can also change the default
for the machine as a whole by doing something like the
following. (This procedure is provided as an example of what might
work. Please check your Tru64 system documentation or contact your
HP service representative for the precise instructions.)
</p>
<p id="89">
<b>The procedure described here is best performed by a system
administrator or similarly trained person. The
<i>vmunix</i> file created and copied at the end is the
UNIX kernel. Modifying it incorrectly or corrupting it can have
serious consequences.</b>
</p>

<p id="90">
<b>1. Log in as root</b>. You must be root (or have superuser privileges)
to perform most of the following operations.
</p>
<p id="91">
<b>2. Change into the <i>/sys/conf/</i> directory</b>.
</p>
<pre id="92">
  prompt# cd /sys/conf
</pre>
<p id="93">
<b>3. Edit the file whose name is the machine name, which we will call
<i>MACHINE_NAME</i>, as follows</b>. (Such a file
typically exists after normal Tru64 Unix install. If the file does not
exist, the System Administrator will have to create one.
</p>
<pre id="94">
Change the line 

           dfssiz         2097152
to
<b>           dflssiz         8388608</b>
or
<b>           dflssiz         16777216</b>
</pre>

<p id="95">
The value of <b>dflssiz</b> may already be different than 2097152,
which is 2 megabytes -- (* 2 (expt 2 20)). The new suggested values are
8388608, which is 8 megabytes and a good value for 32-bit
Lisps, or 16777216, 16 megabytes and a good value for 64-bit
Lisps.
</p>
<p id="96">
<b>4. Run /usr/sbin/doconfig as follows</b> (recall that
<i>MACHINE_NAME</i> is the file in
<i>/sys/conf</i> whose name is the machine name):
</p>
<pre id="97">
 prompt# /usr/sbin/doconfig -c MACHINE_NAME
</pre>
<p id="98">
You should see output similar to:
</p>
<pre id="99">
*** KERNEL CONFIGURATION AND BUILD PROCEDURE ***

Saving /sys/conf/MACHINE_NAME as /sys/conf/MACHINE_NAME.bck

Do you want to edit the configuration file? (y/n) [n]: n


*** PERFORMING KERNEL BUILD ***
	Working....Thu Oct  4 09:58:16 PDT 2001

The new kernel is /sys/MACHINE_NAME/vmunix
</pre>
<p id="100">
<b>5. Copy the new kernel to / with a command like the following</b>
</p>
<pre id="101">
prompt# mv /sys/MACHINE_NAME/vmunix /
</pre>
<p id="102">
<b>6. Reboot the system</b>.
</p>



<hr><h2 id="103"><a name="hpux11-2">5.3 Notes of increasing the default maximum stack size on HP-UX 11 machines</a></h2>

<p id="104">
Increasing the default maximum stack size on HPUX 11 requires
modifying kernel configuration parameters, then rebuilding the kernel.
This process should be done by the systems administrator.
</p>
<p id="105">
The file <i>/stand/system</i> is the kernel
configuration file.  The <code>maxssiz</code> and
<code>maxssiz_64bit</code> tunable parameters need to be
increased to at least 32MB each. If you don't have any references to
<code>maxssiz</code> or <code>maxssiz_64bit</code> in your
<i>/stand/system</i> file, then you can simply add these
lines to the bottom of the file:
</p>
<pre id="106">
maxssiz         (32*1024*1024)
maxssiz_64bit   (32*1024*1024)
</pre>

<p id="107">
Otherwise, you'll need to modify the existing parameters so that they
express a value &gt;= 32MB.  
</p>
<p id="108">
After modifying <i>/stand/system</i>, the kernel needs
to be rebuilt using the following command:
</p>
<pre id="109">
<b>/usr/sbin/config -u /stand/system</b>
</pre>

<p id="110">
The system will have to be rebooted for the changes to take effect.
</p>



<hr><h2 id="111"><a name="macosx-2">5.4 Mac OS X notes</a></h2>

<p id="112">
Allegro CL 8.0 is only supported on Mac OS X version 10.4 or later.
It is not supported on versions 10.3 or
earlier.
</p>


<p id="113">
The Runtime Analyzer (see <a href="runtime-analyzer.htm">runtime-analyzer.htm</a>)
does not work properly on the 64-bit Mac OS X port (there is no
problem on the 32-bit port).
</p>



<h4 id="114">Building shared libraries on Mac OS X</h4>
<p id="115">
<a href="foreign-functions.htm#ff-on-macosx-1">Building
shared libraries on Mac OS X</a> in
<a href="foreign-functions.htm">foreign-functions.htm</a> describes how to create a
shared library suitable for loading into Allegro CL. We have
determined that the <code>-flat_namespace</code> to the
<b>ld</b> used to create the shared library is necessary, as shown in
the linked section.
</p>





<hr><h2 id="116"><a name="heap-start-2">5.5 Heap start locations</a></h2>


<p id="117">
When building large new images, it is often useful to specify Lisp
Heap and C-heap start locations. See the discussion of the
<i>lisp-heap-start</i> and
<i>c-heap-start</i> keyword arguments in <a href="building-images.htm#arguments-without-inherited-defaults-1">Arguments to
build-lisp-image 2: defaults not inherited from the running
image</a> in <a href="building-images.htm">building-images.htm</a>. Here are
the initial locations (called `bases') in Allegro CL 7.0 as delivered.
Values are Hexadecimal integers.
</p>
<table BORDER="1" CELLSPACING="1" CELLPADDING="2" WIDTH="90%">
  <tr>
    <td WIDTH="30%" VALIGN="TOP"><strong>Operating System</strong></td>
    <td WIDTH="35%" VALIGN="TOP"><strong>Lisp base</strong></td>
    <td WIDTH="35%" VALIGN="TOP"><strong>C base</strong></td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Tru64 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x30000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x54000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Tru64 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x2000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">FreeBSD</td>
    <td WIDTH="35%" VALIGN="TOP">0x40000000</td>
    <td WIDTH="35%" VALIGN="TOP">0xa0000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">HP-UX 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x64000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">HP-UX 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x8000001000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x8000002000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Linux (x86)</td>
    <td WIDTH="35%" VALIGN="TOP">0x71000000</td>
    <td WIDTH="35%" VALIGN="TOP">0xa0000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Linux (PPC)</td>
    <td WIDTH="35%" VALIGN="TOP">0x40000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x74000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Mac OS X 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x64000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Mac OS X 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x2000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Windows</td>
    <td WIDTH="35%" VALIGN="TOP">0x20000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x54000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">AIX 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x30000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x64000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">AIX 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x700001000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x700002000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris 32-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x4000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x54000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Solaris (AMD64) 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x10000000000</td>
  </tr>
  <tr>
    <td WIDTH="30%" VALIGN="TOP">Linux (AMD64) 64-bit</td>
    <td WIDTH="35%" VALIGN="TOP">0x1000000000</td>
    <td WIDTH="35%" VALIGN="TOP">0x2000000000</td>
  </tr>
</table>



<hr><hr><h2 id="118"><a name="acl-1">6.0 Release Notes for the base Lisp</a></h2>

<p id="119">
This main section contains three subsections (which have additional
subsections): one on new features
(<a href="#acl-new">Section 6.1 New features in the base Lisp</a>), one on changes which are not
backwards compatible and so may require code changes,
(<a href="#acl-non-back-2">Section 6.2 Non-backward-compatible changes in the base Lisp</a>), and one on
miscellaneous changes <a href="#acl-other-2">Section 6.3 Other changes to and notes about the base Lisp</a>).
</p>


<hr><h2 id="120"><a name="acl-new">6.1 New features in the base Lisp</a></h2>

<p id="121">
We have added a number of new capabilities to Allegro CL. Here we give
links to the documentation of the new features.
</p>
<p id="122">
The features described in
<a href="#acl-added-in-70">Section 6.1.1 Features added to Allegro CL 7.0 after the initial release of Allegro CL 7.0</a> were released
originally as patches to Allegro CL 7.0, but after the initial release
of Allegro CL 7.0. The features described in
<a href="#acl-new-in-80">Section 6.1.2 Major new features in Allegro CL 8.0</a> are new in the Allegro CL
8.0 release.
</p>

<hr><h2 id="123"><a name="acl-added-in-70">6.1.1 Features added to Allegro CL 7.0 after the initial release of Allegro CL 7.0</a></h2>


<p id="124">
Various additions to Allegro CL 7.0 were added after the original release of
Allegro CL 7.0. We list them here. All are part of release 8.0.
</p>



<ol>
<li id="125">
New OLE/OCX interface: a new, high-level interface to OLE/OCX on
Windows was released in early September, 2005. The documentation is in
the revised <a href="ole.htm">ole.htm</a>.
</li>
<li id="126">
<a name="soap-update-july05"></a><b>Update to an Allegro CL/SOAP
API</b>. There was a significant new SOAP release which included
the following enhancements:
<ul>
<li id="127">
CLOS wrappers for SOAP structures
</li>
<li id="128">
built-in definitions for many Schema types
</li>
<li id="129">
new warning hierarchy
</li>
<li id="130">
new condition hierarchy
</li>
<li id="131">
access to element attributes in SOAP messages
</li>
<li id="132">
attribute values may be computed when message is composed
</li>
<li id="133">
top-level multiRef handling
</li>
<li id="134">
multiple SOAP Body elements
</li>
<li id="135">
access to encoding and content-type headers
</li>
<li id="136">
complete access to all the message components
</li>
<li id="137">
user extensions to WSDL code generators
</li>
</ul>
<p id="138">
There are additional changes to SOAP in 8.0 not included in the 7.0
update.
</p>
</li>
<li id="139">
<b>Blowfish encryption update</b>: The update (1) allows specifying
the external format to be used when encrypting and decrypting; (2)
adds support for CBC encrypting, for PKCS#5 padding, and zero (or
null) padding for plaintext with no nulls; and (3) also adds new
auxilliary functions <a href="operators/excl/hex-string-to-usb8-array.htm"><b>hex-string-to-usb8-array</b></a> and <a href="operators/excl/usb8-array-to-hex-string.htm"><b>usb8-array-to-hex-string</b></a>. See <a href="miscellaneous.htm#blowfish-2">Support for Blowfish
encryption</a> in <a href="miscellaneous.htm">miscellaneous.htm</a>.
<p id="140">
In 8.0, the default value for the <i>external-format</i>
argument of <a href="operators/excl/blowfish-init.htm"><b>blowfish-init</b></a> is
changed to <code>:utf-8</code> (it was
<code>:default</code> in release 7.0).
</p>
</li>
<li id="141">
<b>New prolog release</b>: with new documentation <a href="prolog.html">prolog.html</a>.
</li>

<li id="142">
<b>New functionality for retrieving DNS TXT records</b>. The function
<a href="operators/socket/dns-query.htm"><b>socket:dns-query</b></a> now
accepts <code>:txt</code> as a value for the
<i>type</i> keyword argument. When
<code>:txt</code> is specified, the answer provided by <a href="operators/socket/dns-query.htm"><b>socket:dns-query</b></a> will be a list of
one or more strings (because TXT records can be composed of multiple
strings), or <code>nil</code> if there are no TXT
records. See also <a href="dns.htm">dns.htm</a>.
</li>
<li id="143">
<b>ftp-stream-file-mod-time and ftp-file-mod-time now convert the
remote-path argument to Unix syntax pathname naming;
map-over-ftp-directory now works on Windows</b>. <a href="ftp.htm#ftp-file-mod-time-op-bookmarkxx"><b>ftp-file-mod-time</b></a> and <a href="ftp.htm#ftp-stream-file-mod-time-op-bookmarkxx"><b>ftp-stream-file-mod-time</b></a> both take a
<i>remote-path</i> argument which is a pathname
namestring. ftp functions only understand Unix pathname syntax, using
forward slashes to delimit directories. Windows uses backward slashes
to delimit directories and functions like cl:directory called on
Windows returns pathnames with backward slashes in their
namestrings. <a href="ftp.htm#ftp-file-mod-time-op-bookmarkxx"><b>ftp-file-mod-time</b></a> and <a href="ftp.htm#ftp-stream-file-mod-time-op-bookmarkxx"><b>ftp-stream-file-mod-time</b></a> now convert those
namestrings to Unix syntax using the new <i>syntax</i>
keyword argument to <a href="../ansicl/dictentr/namestri.htm"><b>cl:namestring</b></a> (see <a href="implementation.htm#cl-namestring-2">cl:namestring</a> in
<a href="implementation.htm">implementation.htm</a>). Functions such as <a href="ftp.htm#map-over-ftp-directory-op-bookmarkxx"><b>map-over-ftp-directory</b></a>, which call <a href="ftp.htm#ftp-stream-file-mod-time-op-bookmarkxx"><b>ftp-stream-file-mod-time</b></a>, now also work
correctly on Windows.
</li>
<li id="144">
<b>New :syntax keyword argument to cl:namestring converts backslashes
into forward slashes</b>. The <a href="../ansicl/dictentr/namestri.htm"><b>cl:namestring</b></a> function has a new keyword
argument, <i>syntax</i>. The argument is ignored on Unix and Unix-like platforms. On Windows, when <code>nil</code> (the default), <a href="../ansicl/dictentr/namestri.htm"><b>cl:namestring</b></a> behaves as always and when
<code>:unix</code>, <a href="../ansicl/dictentr/namestri.htm"><b>cl:namestring</b></a> converts back slashes in the
namestring to forward slashes. 
<p id="145">
This feature is useful for ftp functions since ftp only understands
Unix pathname syntax (using forward slashes). Functions like <a href="ftp.htm#map-over-ftp-directory-op-bookmarkxx"><b>map-over-ftp-directory</b></a> called on Windows
generates pathnames of the files in an ftp directory, but these
generated pathnames use Windows syntax (with backward slashes
delimiting directories). In order for these pathnames to be used in
calls to other ftp functions, such as <a href="ftp.htm#ftp-stream-file-mod-time-op-bookmarkxx"><b>ftp-stream-file-mod-time</b></a>, they must be
first converted to Unix syntax. Users writing their own mapping
functions for ftp directories may find this added feature of <a href="../ansicl/dictentr/namestri.htm"><b>cl:namestring</b></a> useful. See <a href="implementation.htm#cl-namestring-2">cl:namestring</a> in
<a href="implementation.htm">implementation.htm</a>. 
</p>
</li>
<li id="146">
<b>Aodbc update</b>: this update provided the
ability to set the non-blocking flag in a database. See <a href="operators/dbi/connect.htm"><b>connect</b></a> and <a href="operators/dbi/db-non-blocking.htm"><b>db-non-blocking</b></a>.
</li>
<li id="147">
<b>Oracle-direct update</b>: this update provided
some additional functionality for the Oracle Direct interface. See
<a href="oracle-interface.htm">oracle-interface.htm</a>.
</li>
</ol>





<hr><h2 id="148"><a name="acl-new-in-80">6.1.2 Major new features in Allegro CL 8.0</a></h2>


<p id="149">
Other new capabilities to Allegro CL are listed here, with links to
the documentation of the new features. Some of these features have
also been released as patches to Allegro CL 7.0.
</p>

<ol>
<li id="150">
<b>AllegroCache</b>: AllegroCache is a high performance, dynamic
object caching database system. It allows programs to work directly
with objects as if they were in memory while in fact the object data
is being stored persistently. AllegroCache supports a full transaction
model with long and short transactions, and meets the classic ACID
requirements for a reliable and robust database. See the AllegroCache
documentation (PDF files), located in the <b>[Allegro
Directory]/acache/doc/</b> directory: <a href="../acache/doc/acache.pdf">acache.pdf</a> and <a href="../acache/doc/acachetutorial.pdf">acachetutorial.pdf</a>.
</li>
<li id="151">
<b>:explain :inlining declaration</b>: there are various :explain
declarations which tell the compiler to print out information about
what it is doing or trying to do as it compiles. These declarations
are described in <a href="compiling.htm#decl-help-1">Help
with declarations: the :explain declaration</a> in
<a href="compiling.htm">compiling.htm</a> and also see the new
<a href="compiler-explanations.htm">compiler-explanations.htm</a> document. The new
<code>:explain :inlining</code> declaration provides information
about why inlining of functions succeeds or fails. See <a href="compiler-explanations.htm#inlining-explain-2">Inlining
explanations</a> in
<a href="compiler-explanations.htm">compiler-explanations.htm</a>. There is an example in
that section.
</li>
</ol>



<hr><h2 id="152"><a name="other-new-3">6.1.3 Other new features in Allegro CL 8.0</a></h2>

<ol>
<li id="153">
<b>New -ee command-line argument and new function
make-escaped-string</b>: this argument is the same as the existing -e
command-line argument but it will additionally process its companion
argument to convert character triplets of the form <b>%<i>hh</i></b>,
where <b><i>hh</i></b> is a two digit hex value, to the character
whose char-code is that hex value. This allows you easily to specify
as a companion argument values containing spaces, backslashes,
etc.. Because the conversion is not done until Lisp is ready to
process the argument, earlier shell processing will not have
incorrectly resolved the special characters before Lisp sees them.
See <a href="startup.htm#command-line-args-1">Command line
arguments</a>and <a href="startup.htm#spec-ee-note">Further description of the -e and -ee command-line
arguments</a>, both in <a href="startup.htm">startup.htm</a>.
<p id="154">
The new function <a href="operators/excl/make-escaped-string.htm"><b>make-escaped-string</b></a> will create converted
strings suitable as companion arguments to <b>-ee</b>.
</p>
</li>
<li id="155">
<b>New macro with-native-strings*</b>. <a href="operators/excl/with-native-strings_s.htm"><b>This new macro</b></a>
allows nesting of calls to <a href="operators/excl/with-native-string.htm"><b>with-native-string</b></a>.
</li>
<li id="156">
<b>New function system:constant-value</b>: the function <a href="operators/system/constant-value.htm"><b>system:constant-value</b></a> takes a
form as an argument, and if the form has constant value, returns its
value. An environment can be passed as an optional argument.
</li>
<li id="157">
<b>New function sys:ensure-portable-walking-environment</b>. <a href="operators/system/ensure-portable-walking-environment.htm"><b>sys:ensure-portable-walking-environment</b></a>
returns an environment suitable for portable code walkers to use
entirely within the ANSI Specification of Common Lisp.
</li>
<li id="158">
<b>New second optional argument to cl:macroexpand and
cl-macroexpand-1</b>. This second optional argument allows more
choices in macroexpansion in different environments. See <a href="implementation.htm#macroexpand-2">cl:macroexpand and
cl:macroexpand-1</a> in <a href="implementation.htm">implementation.htm</a>
for details.
</li>
<li id="159">
<b>New macro mp:with-message-interrupts-disabled</b>:
on Windows, even though a process may be waiting, it still typically
watches for messages and processes operating system messages that
require a response (because Windows expects threads to do
this). However, there are some rare circumstances where this message
handling should be suppressed. The macro <a href="operators/mp/with-message-interrupts-disabled.htm"><b>mp:with-message-interrupts-disabled</b></a> will do
this.
</li>
</ol>



<hr><h2 id="160"><a name="new-mp-3">6.1.4 Multiprocessing and OS threads in Allegro CL 8.0</a></h2>

<p id="161">
The multiprocessing model was significantly changed in release 7.0.
There are not major changes in release 8.0 compared to 7.0, other than
bug fixes and internal improvements. See <b>The new model for
multiprocessing and OS threads in Allegro CL</b> in
<b>version-70-release-notes.htm</b> details of the 7.0
changes.
</p>

<h4 id="162">
process-suspend-hook and process-resume-hook will go away soon
</h4>
<p id="163">
Currently a programmer can set a process's <a href="operators/mp/process-suspend-hook.htm"><b>process-suspend-hook</b></a> and be sure that whenever
the process's execution is interrupted and another process allowed to
run, the hook will get executed. Similarly, when a process regains
control after another process has been running, its <a href="operators/mp/process-resume-hook.htm"><b>process-resume-hook</b></a>, if any, will be run before
its execution continues.
</p>
<p id="164">
Unfortunately, suspend-hooks and resume-hooks cause problems for
native thread implementations and other proposed enhancements in the
multiprocessing model.
</p>
<p id="165">
Therefore, these features will likely be removed in the next
release. If you use these features, please contact <a href="mailto:support@franz.com">support@franz.com</a> so we can assist
you in providing alternatives when these features are removed.
</p>






<hr><h2 id="166"><a name="acl-non-back-2">6.2 Non-backward-compatible changes in the base Lisp</a></h2>

<ol>
<li id="167">
<b>Meaning of ~/ on Windows changed</b>. This change was made with an
update released after Allegro CL 8.0 was released. Previously, the
directory ~/ (the user's home directory) was the value of the HOME
environment variable (if set) and C:\\ (if HOME was not set). In order
to make Allegro CL consistent in this respect with other Windows
programs, the value is now HOMEDRIVE/HOMEPATH (i.e. the concatenation
of the value of the HOMEDRIVE environment variable, the string "/",
and the value of the HOMEPATH environment valriable). The value of the
HOME environment variable is used if HOMEDRIVE/HOMEPATH is not
set. C:\\ is used if HOMEDRIVE/HOMEPATH and HOME are not set. 
</li>
<li id="168">
<b>ACL_STARTUP_DEBUG support removed</b>. Until support was removed
with a 7.0 patch, Allegro CL would examine the environment variable
ACL_STARTUP_DEBUG on startup and print startup information if it was
set. This is no longer supported.
</li>
<li id="169">
<b>Second (non-standard) argument to cl:sleep removed</b>. This
optional argument to <a href="../ansicl/dictentr/sleep.htm"><b>cl:sleep</b></a>, which was documented as being
for internal use only, has been removed. Any code which called <a href="../ansicl/dictentr/sleep.htm"><b>cl:sleep</b></a> with two arguments
should be modified to call it with one argument only. Also, only
non-negative arguments are accepted by <a href="../ansicl/dictentr/sleep.htm"><b>cl:sleep</b></a>. Passing a negative argument
causes an error. 
<p id="170">
<a href="../ansicl/dictentr/sleep.htm"><b>cl:sleep</b></a> is now effectively
<a href="operators/mp/process-sleep.htm"><b>mp:process-sleep</b></a> (with the
whostate argument hardwired to "sleeping"). In earlier releases, there
was a function <b>excl:lisp-sleep</b>. That function was removed in
release 7.0. See <a href="multiprocessing.htm#minimum-sleep-1">cl:sleep and minimum sleeping time</a> in
<a href="multiprocessing.htm">multiprocessing.htm</a>.
</p>
</li>
<li id="171">
<b>Change to the default value of the external-format argument to
blowfish-init</b>. The default value for the
<i>external-format</i> argument of <a href="operators/excl/blowfish-init.htm"><b>blowfish-init</b></a> is changed to
<code>:utf-8</code> (it was <code>:default</code> in
release 7.0). It is unlikely that this change will affect any
code. The argument was only added by a patch in September, 2005. The
sensible default is <code>:utf-8</code> (which is the default
for <a href="operators/excl/blowfish-encrypt.htm"><b>blowfish-encrypt</b></a> and <a href="operators/excl/blowfish-decrypt.htm"><b>blowfish-decrypt</b></a>) but the
behavior prior to the argument being added was to use
<code>:default</code> so the patch kept the same behavior. In
8.0, the more sensible default is used.
</li>
<li id="172">
<b>Environment name switching: the names of environments have been
changed</b>. What was in 7.0 a <b>:compilation</b> environment is now a
<b>:compiler</b> environment and what in 7.0 was a
<b>:compilation-walking</b> environment is now a <b>:compilation</b>
environment. See <a href="environments.htm">environments.htm</a>.
</li>
<li id="173">
<b>Environment variable name change</b>: the variable <a href="variables/system/s_compile-file-environment_s.htm"><code>sys:*compile-file-environment*</code></a> is
deprecated, and the preferred name is now <a href="variables/system/s_compilation-unit-environment_s.htm"><code>sys:*compilation-unit-environment*</code></a>. The old
name does not have a value but does name a symbol-macro which causes
the new name to be used.
</li>
<li id="174">
<b>Environment function replaced</b>: the function <a href="operators/system/make-compile-file-environment.htm"><b>sys:make-compile-file-environment</b></a> is
deprecated. Use the new <a href="operators/system/make-compilation-unit-environment.htm"><b>sys:make-compilation-unit-environment</b></a>
instead. Calls to <a href="operators/system/make-compile-file-environment.htm"><b>sys:make-compile-file-environment</b></a> (which took
no arguments) can be replaced with calls to <a href="operators/system/make-compilation-unit-environment.htm"><b>sys:make-compilation-unit-environment</b></a> with
no arguments. <a href="operators/system/make-compilation-unit-environment.htm"><b>sys:make-compilation-unit-environment</b></a>
accepts an optional argumen, which, when true, returns an environment
suitable for <a href="../ansicl/dictentr/compile.htm"><b>compile</b></a> and when
<code>nil</code> (the default, returns an environment
suitable for <a href="../ansicl/dictentr/compile-.htm"><b>compile-file</b></a> (as
<a href="operators/system/make-compile-file-environment.htm"><b>sys:make-compile-file-environment</b></a> did).
</li>
<li id="175">
<b>The default value of *open-rename-function* now writes file using
*default-pathname-defaults*</b>. In earlier releases, when a file was
written because open was called for writing to an existing file with
<code>:if-exists</code> specified to be
<code>:rename</code>, the function which is the initial value of
<a href="variables/excl/s_open-rename-function_s.htm"><code>*open-rename-function*</code></a>
would use the current directory to fill in missing parts of the
renamed file's directory location, rather than using <a href="../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>. Since
<a href="../ansicl/dictentr/open.htm"><b>open</b></a> used <a href="../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>, the result
could be the new file and the backup in different directories when the
value of <a href="../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a> was
different from the current directory (as returned by <a href="operators/excl/current-directory.htm"><b>current-directory</b></a>). In release 8.0, the
renaming function does use <a href="../ansicl/dictentr/default-.htm"><code>*default-pathname-defaults*</code></a>. This is a
non-backward-compatible change although we suspect anyone who has
noticed the behavior has written a renaming function to behave as the
new default renaming function now does. See <a href="variables/excl/s_open-rename-function_s.htm"><code>*open-rename-function*</code></a>.
</li>
<li id="176">
<b>Revised handling of nested conditionals, new variables</b>. The
handling of nested #+/#- conditionals has been revised. A nested
conditional is a form like <code>(list #+allegro :allegro #-allegro
#+foo :foo #-foo :default)</code>. Until this change, Allegro CL
would evaluate that form (assuming <code>:allegro</code> is a
feature and <code>:foo</code> is not) to <code>(:allegro
:default)</code>. With the change, it now follows other
implementations and returns <code>(:allegro)</code>. Also,
before the change the form <code>(list #+allegro :allegro #-allegro
#+foo :foo)</code> returned <code>(:allegro)</code> in
Allegro CL but errored in other implementations. It now errors in
Allegro CL as well.
<p id="177">
The issues are complicated. There are two new variables that affect
this behavior: <a href="variables/excl/s_sharp-plus-de-facto-standard-compatible_s.htm"><code>*sharp-plus-de-facto-standard-compatible*</code></a> and
<a href="variables/excl/s_warn-on-nested-reader-conditionals_s.htm"><code>*warn-on-nested-reader-conditionals*</code></a>. The
section <a href="implementation.htm#nested-conditionals-3">The issue of nested conditionals in
Allegro CL</a> in <a href="implementation.htm">implementation.htm</a>
discusses nested conditionals in detail. See that section and the
descriptions of the two variables for more information.
</p>
</li>
</ol>




<hr><h2 id="178"><a name="acl-other-2">6.3 Other changes to and notes about the base Lisp</a></h2>

<ol>
<li id="179">
<b>New additional optional argument to make-random-state allows
seeding with outside random values</b>. <a href="../ansicl/dictentr/make-ran.htm"><b>make-random-state</b></a> has an additional
optional argument <i>seed</i> that allows specifying a
value to use to seed the random number generator (it is effective only
when the <i>state</i> optional argument is specified as
<code>t</code>). See <a href="implementation.htm#cl-random-2">cl:random and cl:make-random-state</a> in
<a href="implementation.htm">implementation.htm</a>.
</li>
<li id="180">
<b>build-lisp-image now has a :require-search-list argument</b>. This
argument allows specifying a value for <a href="variables/system/s_require-search-list_s.htm"><code>*require-search-list*</code></a> (which instructs an
image where to look for modules). The value defaults to the value of
<a href="variables/system/s_require-search-list_s.htm"><code>*require-search-list*</code></a> in the running
image. See <a href="building-images.htm">building-images.htm</a>, where <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a> is fully
described.
</li>
<li id="181">
<b>Certain build-lisp-image arguments can now get default values from
environment variables</b>. The c-heap-size, c-heap-start,
lisp-heap-size, lisp-heap-start, newspace, and oldspace keyword
arguments to <a href="operators/excl/build-lisp-image.htm"><b>build-lisp-image</b></a> can get their default
values from environment variables (named
ACL_BUILD_[arg-name-with-underscores] --
e.g. ACL_BUILD_C_HEAP_START). See <a href="building-images.htm#arguments-with-environment-defaults-1">Arguments to
build-lisp-image 3: defaults taken from environment
variables</a> in <a href="building-images.htm">building-images.htm</a>..
</li>
<li id="182">
<b>Changes to the sax parser</b>. There have been some minor changes to
the sax parser, described in <a href="sax.htm">sax.htm</a>. The class
<a href="sax.htm#lxml-parser-class-bookmarkxx"><code>lxml-parser</code></a> has new normalize and package
slots and <a href="sax.htm#parse-to-lxml-op-bookmarkxx"><b>parse-to-lxml</b></a> has new normalize and class
keyword arguments. The package argument in <a href="sax.htm#parse-to-lxml-op-bookmarkxx"><b>parse-to-lxml</b></a> now
defaults to the package value in the class that is the value of the
class argument. Normalizing allows an element that contains only
string content to appear as one contiguous string (at the cost of
additional consing). Finlly, the <a href="sax.htm#pxml-version-op-bookmarkxx"><b>pxml-version</b></a> now
accepts <code>:query</code> as a value for its optional
parser-type argument: when specified, type of the enabled version of
the <a href="sax.htm#parse-xml-op-bookmarkxx"><b>parse-xml</b></a> operator is returned.
</li>
<li id="183">
<b>:nat and :unsigned-nat foreign types</b>. This change was actually
added in release 7.0 but not previously documented. These types are
described in <a href="ftype.htm#foreign-type-syntax-1">The
Syntax for Foreign Types</a> in
<a href="ftype.htm">ftype.htm</a>. "Nat" stands for "natural" and is
intended to be the size of integer which fits into the natural word
size of the machine - 32 bits on a 32-bit lisp and 64 bits on a 64-bit
Lisp.
</li>
<li id="184">
<b>New compiler switch trust-table-case-argument-switch</b>. <a href="variables/compiler/trust-table-case-argument-switch.htm"><code>trust-table-case-argument-switch</code></a> is true
when speed is 3 and safety is 0. If a case statement is suitable for
compilation to a table-driven case statement (see the description for
details), which is faster but unsafe, it will be compiled that way
when this switch is true.
</li>
<li id="185">
<b>New function gets the environment of Lisp</b>. <a href="os-interface.htm#environment-op-bookmarkxx"><b>environment</b></a> return a list of the
original environment when Lisp was started.
</li>
</ol>



<hr><h2 id="186"><a name="acl-platform-specific-2">6.4 Base Lisp platform-specific information</a></h2>

<p id="187">
There are no entries at this time. Information may be placed here in
documentation updates after the initial Allegro CL 8.0 release.
</p>







<hr><hr><h2 id="188"><a name="clim-1">7.0 Release Notes for CLIM</a></h2>

<p id="189">
The CLIM manual has not been updated (other than minor corrections)
for the 8.0 release.  There have been no significant changes to CLIM
functionality compared to 7.0, though there have been bug fixes and
performance enhancements.
</p>

<p id="190">
(Repeated mostly from 7.0 Release Notes.)
The documentation for CLIM is in an online PDF file, <a href="clim-ug.pdf">clim-ug.pdf</a>.
</p>

<p id="191">
On Linux and FreeBSD, Allegro CLIM works with Open Motif 2.1 and 2.2
(2.2 was released in early 2002). Open Motif 2.2 is available at no
charge from <a href="http://www.openmotif.org">www.openmotif.org</a>. Allegro CL
8.0/Allegro CLIM will work with either version. Redhat Linux 7.2 is
supplied with Lesstif, a version of Motif that <b>does not work with
CLIM</b>. See the Linux architecture specific information in the
<a href="http://www.franz.com/support/faq/index.lhtml">Allegro CL
FAQ</a> for information on how to install Redhat Linux 7.2 without
lesstif and how to uninstall lesstif if already present. On all other
Unix platforms, CLIM uses the platform-supplied Motif.
</p>
<p id="192">
<b>On Mac OS X 10.3, OpenMotif Motif 2.2.2 is required. CLIM
will not work with version 2.2.0</b>. 
</p>
<p id="193">
<b>Certain CLIM demos on Solaris 64 bit give segv or otherwise fail
when displaying over the network, language environment must be set to
C</b>. This is a problem when running any Sun GUI (such as the CDE
environment or the Gnome 2.0 interface) on a Solaris64 machine. When
bringing up the environment, set the language/locale to "C". (On the
login screen, there's an "Options" button, which displays a menu that
has a "Languages" submenu.  Choose "C". Note: the default value is
typically "en_US".)  The "C" setting can process all of the 64-bit
font sets. However, difficulties arise when displaying over the
network. If you are displaying on the monitor of the machine running
Allegro CL (and CLIM), the demos work as long as the language/locale
is "C". They typically do not work when displaying on a monitor over
the network. As of this writing, there is no fix for the problem.
</p>



<hr><hr><h2 id="194"><a name="cg-1">8.0 Release Notes for Common Graphics and the IDE</a></h2>


<p id="195">
There are few significant changes to Common Graphics and the
Integrated Development Environment in 8.0 (those few are described in
<a href="#cg-significant-new-2">Section 8.1 Significant changes in Common Graphics</a>). Work on Common
Graphics and IDE support on Linux has progressed. Allegro CL 8.0 on
Linux includes a preliminary version of Common Graphics and the IDE
(similar to what was released for Allegro CL 7.0). Note that some
destabilization may have occurred due to reworking some pieces of code
in order to share more code with the new GTK port of Common Graphics
and the IDE for Linux/Unix.
</p>
<p id="196">
There were many significant changes in release 7.0. Users unfamiliar
with those changes should look at the
<b>version-70-release-notes.htm</b>.
</p>

<p id="197">
The <a href="#cg-non-back-2">first
subsection</a> describes changes to Common Graphics and
the IDE that are non backward-compatible. Please review this section
and make whatever necessary changes to your code to obtain the desired
behavior in release 8.0.
</p>
<p id="198">
The <a href="#cg-other-2">second subsection</a>
describes other changes to Common Graphics and the IDE. These should
not require code changes (please tell us if any do, because that may
indicate a bug), but note that certain function and argument names
have been deprecated in favor of new names, and that new code should
reflect these changes, and old code should be revised at some point.
</p>
<p id="199">
The section <a href="#ide-release-notes-2">Section 8.5 IDE release notes</a> and its
subsections provide information about the IDE.
</p>

<hr><h2 id="200"><a name="cg-significant-new-2">8.1 Significant changes in Common Graphics</a></h2>

<h3 id="201">
New OCX control class and associated functionality
</h3>

<p id="202">
The new macro <a href="operators/cg/d/def-cg-ocx-control.htm"><b>def-cg-ocx-control</b></a> defines a Common Graphics
dialog-item class for one of the OLE controls that was defined by a
<a href="ole.htm#def-ole-linkage-op-bookmarkxx"><b>def-ole-linkage</b></a> form.  A newly-defined
control could be added to the IDE's Components Toolbar as usual by
calling <a href="operators/ide/add-to-component-toolbar.htm"><b>add-to-component-toolbar</b></a>.  A couple of known
remaining problems: (1) The value of certain properties will be an
interface object, and so it is not feasible to modify the value at
this time. (2) There is not yet a way to return a value in an "in-out"
parameter of an OLE method.
</p>

<h3 id="203">
Two new controls: lamp and html
</h3>

<ul>
<li id="204">
<b>New lamp widget class</b>. The <a href="classes/cg/lamp.htm"><code>lamp</code></a> widget class implements the
lamp widget. There are a number of associated generic functions
implementing aspects of lamp functionality.
</li>
<li id="205">
<b>New HTML control</b>. There is a new <a href="classes/cg/html-widget.htm"><code>html-widget</code></a> dialog-item plus an <a href="classes/cg/html-browser.htm"><code>html-browser</code></a> dialog for adding HTML
browsing capabilities to Common Graphics apps. It uses Microsoft's
WebBrowser OLE control, which is also used by Internet Explorer.
Unfortunately, there appears to be no way to search for text in the
displayed HTML.
</li>
</ul>




<hr><h2 id="206"><a name="cg-non-back-2">8.2 Non-backward-compatible changes in Common Graphics</a></h2>

<ol>
<li id="207">
<b>All cg/ide packages are locked</b>. This makes things more like
release 6.2 and earlier when the symbols were all defined in the cg
package, which was locked.  In 7.0 there was less locking because the
child packages had been created but inadvertently not locked.  This
may cause user methods that specialize on built-in classes to cause
package lock warnings or errors that did not occur in 7.0.  Such an
error generally indicates that you should be specializing on your own
subclass rather than on a built-in class.
</li>
<li id="208">
<b>draw-curve renamed draw-bezier-curve</b>. The new name is more
descriptive and draw-curve too easily conflicted with user function
names. See <a href="operators/cg/d/draw-bezier-curve.htm"><b>draw-bezier-curve</b></a>.
</li>
<li id="209"><b>range-equality-test deprecated</b>: the function which is the value
of <a href="operators/cg/r/range-equality-test.htm"><b>range-equality-test</b></a> is no longer used
by Common Graphics code. (The function was used to compare old and new
values of the <a href="operators/cg/r/range.htm"><b>range</b></a>
of a dialog-item to see whether there was really a change.)  <a href="operators/cg/o/on-change-test.htm"><b>on-change-test</b></a> is now used
for that purpose.
</li>
<li id="210">
<b>save-selection-when-unfocused deprecated</b>: the Windows code that
implemented save-selection-when-unfocused has not been supported by
Microsoft for some time. There is no practical way to implement the
behavior when <code>nil</code> in GTK. The default is true
(the text stays selected). Specifying it to be <code>nil</code> may or may not be effective and is not
recommended.
</li>
<li id="211">
<b>The "context menu key" (vk-applications) will now call
pop-up-shortcut-menu by default</b>. Previous the default behavior was
to do nothing. See <a href="variables/cg/vk-applications.htm"><code>vk-applications</code></a>.
</li>
<li id="212">

<b>Some textures are now actually bitmaps</b>. A handful of built-in
textures are now pixmaps rather than textures.  This was necessary on
GTK, but is now true on all platforms for consistency.  The pixmaps
are <a href="variables/cg/white-texture.htm"><code>white-texture</code></a>,
<a href="variables/cg/black-texture.htm"><code>black-texture</code></a>, <a href="variables/cg/gray-texture.htm"><code>gray-texture</code></a>, <a href="variables/cg/light-gray-texture.htm"><code>light-gray-texture</code></a>, and <a href="variables/cg/dark-gray-texture.htm"><code>dark-gray-texture</code></a>. This may
require some code changes. If you had passed the value to <a href="operators/cg/c/copy-pixels-to-stream.htm"><b>copy-pixels-to-stream</b></a>, for example,
then you would now need to pass it to <a href="operators/cg/c/copy-to-stream.htm"><b>copy-to-stream</b></a> instead. <b>This entry was not
included in the originally released version of these Release
Notes.</b>

</li>
</ol>



<hr><h2 id="213"><a name="cg-win-gtk-2">8.3 Functionality to handle differences between Windows and GTK</a></h2>

<h3 id="214">
For complete information on the differences between Windows and GTK,
please see
<a href="cggtk-relnotes.html">cggtk-relnotes.html</a>.
</h3>

<p id="215">
Common Graphics and the IDE now run on Windows and Linux with
GTK. Certain differences between the two operating systems and
windowing systems mean that some things do not work the same in
Windows as in GTK and vice versa. The functionality listed here allows
tries to handle the differences. Some of the
variables/operators/etc. only available on one of the two platforms.
</p>

<h4 id="216">
Mozilla support
</h4>

<p id="217">
The system needs to know the directory where the GTK control supplied
by Mozilla to support the <a href="classes/cg/html-widget.htm"><code>html-widget</code></a> resides. (On windows, the widget is
implemented in another way.) It may not be practical to search for the
location automatically. See <a href="operators/ide/mozilla-library-path.htm"><b>mozilla-library-path</b></a>, <a href="variables/excl/s_mozilla-library-path_s.htm"><code>*mozilla-library-path*</code></a>, and <a href="operators/cg/f/find-mozilla-gtk-path.htm"><b>find-mozilla-gtk-path</b></a>.
</p>

<h4 id="218">
Event handler processes
</h4>

<p id="219">
Because Linux currently does not use native threads and Windows does,
on Windows, all windows handle events in their own thread associated
with the window while on Linux/GTK, there is one event-handling
thread. <a href="operators/cg/d/default-application-window-subkey.htm"><b>default-application-window-subkey</b></a>, <a href="variables/cg/s_use-single-cg-event-handling-process_s.htm"><code>*use-single-cg-event-handling-process*</code></a>, and
<a href="variables/cg/s_single-cg-event-handling-process_s.htm"><code>*single-cg-event-handling-process*</code></a> allow
distinguishing behavior when necessary. <a href="operators/cg/c/cg-process-wait.htm"><b>cg-process-wait</b></a> should be used on GTK instead of
<a href="operators/mp/process-wait.htm"><b>process-wait</b></a> in event
handlers. See also <a href="operators/cg/p/process-pending-events-if-event-handler.htm"><b>process-pending-events-if-event-handler</b></a>.
</p>



<h4 id="220">
Miscellaneous
</h4>

<ul>
<li id="221">
<b>Linux has a built-in hand cursor</b>, which is the value of <a href="variables/cg/hand-cursor.htm"><code>hand-cursor</code></a>. That variable is
<code>nil</code> on windows. <code>(find-cursor
:hand-cursor)</code> works correctly on both,
</li>
<li id="222">
<b>Linux pixel size issues</b>: because Linux/GTK seems not to have a
reliable notion of pixel size, the functions <a href="operators/cg/p/pixels-to-points.htm"><b>pixels-to-points</b></a>, <a href="operators/cg/p/points-to-pixels.htm"><b>points-to-pixels</b></a>, and <a href="operators/cg/f/font-pixel-height.htm"><b>font-pixel-height</b></a> are provided. They work on
Windows but are usually not necessary.
</li>
<li id="223">
<b>Timer resolution on Linux/GTK</b>: see <a href="variables/cg/s_cg-timer-resolution_s.htm"><code>*cg-timer-resolution*</code></a>.
</li>
<li id="224">
<b>Check marks in menus: on Linux/GTK</b>: you must specify at
creation time whether a menu-item will ever be checked. See <a href="operators/cg/c/checkable.htm"><b>checkable</b></a>.
</li>
<li id="225">
<b>Modal dialogs</b>: when displaying a modal dialog, the owner window
is usually disabled. On GTK, this make take too long. <a href="variables/cg/s_modal-dialogs-disable-owner_s.htm"><code>*modal-dialogs-disable-owner*</code></a>
handles this.
</li>
<li id="226">
<b>f10 key</b>: it requries special handling on Linux.GTK, see <a href="operators/cg/h/handle-f10.htm"><b>handle-f10</b></a>.
</li>
<li id="227">
<b>Scroll increments</b>: the new function <a href="operators/cg/s/scroll-increment.htm"><b>scroll-increment</b></a> is needed on Linux/GTK. It
works on Windows but there is essentially the same as <a href="operators/cg/u/user-scroll.htm"><b>user-scroll</b></a> (which does not work on
Linux.GTK).
</li>
<li id="228">
<b>Using the IDE parent-window</b>: issues of mixing windows from
various applications are more complex on Linux/GTK than on
Windows. See the functions <a href="operators/ide/use-ide-parent-window.htm"><b>use-ide-parent-window</b></a>, <a href="operators/ide/maximize-ide.htm"><b>maximize-ide</b></a>, <a href="operators/ide/ide-exterior.htm"><b>ide-exterior</b></a>, and <a href="operators/ide/top-ide-window.htm"><b>top-ide-window</b></a>, and the classes <a href="classes/ide/ide-parent-window.htm"><code>ide-parent-window</code></a>, <a href="classes/ide/ide-child-window.htm"><code>ide-child-window</code></a>, and <a href="classes/ide/ide-owner-window.htm"><code>ide-owner-window</code></a>. The IDE menu item
<a href="ide-menus-and-dialogs/view-menu.htm#maximize-ide">View |
Maximize IDE</a> (Linux/GTK only) is related.
</li>
</ul>




<hr><h2 id="229"><a name="cg-other-2">8.4 Other changes in Common Graphics</a></h2>



<ol>

<li id="230">
<b>New variable *show-console-on-standalone-error*</b>. The variable
<a href="variables/cg/s_show-console-on-standalone-error_s.htm"><code>*show-console-on-standalone-error*</code></a>
(actually added in a 7.0 update) controls whether the console window
is automatically shown when an error is signaled in a standalone
Common Graphics application that was generated from a project in the
IDE.
</li>
<li id="231">
<b>New function special-windows-directory</b>. The function <a href="operators/windows/special-windows-directory.htm"><b>special-windows-directory</b></a> determines
the paths of certain Windows directories (such as the <b>My
Documents</b> directory).
</li>
<li id="232">
<b>New keyword argument to load-pixmap</b>. The function <a href="operators/cg/l/load-pixmap.htm"><b>load-pixmap</b></a> has a new
<i>make-unique-name</i> keyword argument to ensure that
the function does not create a name for the pixmap (from its file
name) that is the same as the name of a cached pixmap.
</li>
<li id="233">
<b>on-print event handler can now be nil</b>. The <a href="operators/cg/o/on-print.htm"><b>on-print</b></a> property of a widget may now be set to
<code>nil</code> like other event-handlers, in which case
Common Graphics will default the value to <a href="../ansicl/dictentr/write-to.htm"><b>princ-to-string</b></a>.  This avoids confusing errors
that could otherwise happen if a user assumes that this property could
be nil like other event-handlers and then CG funcalls <code>nil</code> on an object to print.
</li>
<li id="234">
<b>transparent-pixel-value argument to generate-mask</b>. The
<i>transparent-pixel-value</i> argument to <a href="operators/cg/g/generate-mask.htm"><b>generate-mask</b></a> may now be <code>nil</code>. When it is, it takes the value of the upper-left
pixel of the pixmap as the value to make transparent.
</li>
<li id="235">
<b>Multi-picture-buttons and masked pixmaps</b>. <a href="classes/cg/multi-picture-button.htm"><code>multi-picture-button</code></a>s now handle masked pixmaps.
Previously if a pixmap that has a mask was specified as the pixmap of
a <a href="classes/cg/button-info.htm"><code>button-info</code></a>, the
transparent area of the mask was not drawn in the <a href="classes/cg/multi-picture-button.htm"><code>multi-picture-button</code></a>'s background color.
</li>
<li id="236">
<b>Autosizing list-views</b>. The <a href="classes/cg/list-view.htm"><code>list-view</code></a> function <a href="operators/cg/a/auto-size.htm"><b>auto-size</b></a> will no longer truncate a column
header string if all of the strings in the body of the column are
shorter than the header string.
</li>
<li id="237">
<b>New tabs-are-draggable property</b>. If you turn on the new <a href="operators/cg/t/tabs-are-draggable.htm"><b>tabs-are-draggable</b></a> property of a
<a href="classes/cg/tab-control.htm"><code>tab-control</code></a>, and the
<a href="operators/cg/s/single-line.htm"><b>single-line</b></a> property is also
true, then the user can rearrange the tabs within the tab-control by
dragging after clicking left on a tab.  In the IDE, the <a href="ide-menus-and-dialogs/editor-workbook.htm">Editor</a> uses this to
allow you to change the order of the editor buffers.  The <a href="ide-menus-and-dialogs/debug-window.htm">Debug Window</a> also allows
you to change the order of any additional listeners that you've
created there with the <a href="ide-menus-and-dialogs/view-menu.htm#new-listener">View | New Listener</a> command.
</li>
<li id="238">
<b>New variable *event-loop-processes*</b>. <a href="variables/cg/s_event-loop-processes_s.htm"><code>*event-loop-processes*</code></a> is a list of all
processes that are currently inside a call to <a href="operators/cg/e/event-loop.htm"><b>event-loop</b></a>, and which therefore can handle
Windows messages.
</li>
<li id="239">
<b>New function message-box</b>: the <a href="operators/cg/m/message-box.htm"><b>message-box</b></a> function displays a simple message
dialog using the platform's low-level utility to do so.
</li>
<li id="240">
<b>Change to font-equal</b>: the function <a href="operators/cg/f/font-equal.htm"><b>font-equal</b></a> will now return true if the family
field of one font is <code>nil</code> but the other is
not. This compensates for the fact that the family field (which
typically has no effect) sometimes gets "filled in" and sometimes it
does not.
</li>
<li id="241">
<b>move-window-into-parent applied to top-level windows</b>: the
function <a href="operators/cg/m/move-window-into-parent.htm"><b>move-window-into-parent</b></a> now works for top-level
windows.
</li>
<li id="242">
<b>The initial-name argument of
ask-user-for-new/existing-pathname</b>. <a href="operators/cg/a/ask-user-for-existing-pathname.htm"><b>ask-user-for-existing-pathname</b></a> and <a href="operators/cg/a/ask-user-for-new-pathname.htm"><b>ask-user-for-new-pathname</b></a> now accept
pathname objects as well as namestrings as values for the
<i>initial-name</i> argument.
</li>
<li id="243">
<b>Default for link-color</b>: the <a href="operators/cg/l/link-color.htm"><b>link-color</b></a> property defaulted to blue for a
<a href="classes/cg/rich-edit.htm"><code>rich-edit</code></a> dialog-item but
to red for a <a href="classes/cg/rich-edit-pane.htm"><code>rich-edit-pane</code></a>; now it is blue for both.
</li>
<li id="244">
<b>delete-command undeprecated</b>: <a href="operators/cg/d/delete-command.htm"><b>delete-command</b></a> is now undeprecated because it
passes the command down to a descendent window (like <a href="operators/cg/c/copy-command.htm"><b>copy-command</b></a> and the others) before it calls
<a href="operators/cg/d/delete-selection.htm"><b>delete-selection</b></a>. (It was
deprecated in 7.0.)
</li>
<li id="245">
<b>Clicking on a text-edit-pane whose parent is a child
window</b>. Due to an apparent Windows quirk, clicking on a <a href="classes/cg/text-edit-pane.htm"><code>text-edit-pane</code></a> whose parent is a
child window did not expose the parent window.  A Common Graphics
method has been added to cover for that anomaly.
</li>
<li id="246">
<b>draw-string-in-box obeys vertical justification when wrap-p is
true</b>: <a href="operators/cg/d/draw-string-in-box.htm"><b>draw-string-in-box</b></a>
now handles the case where <i>wrap-p</i> is true and
vertical-justification is <code>:center</code> or
<code>:bottom</code>. The text had always been top-justified
when <i>wrap-p</i> is true.
</li>
<li id="247">
<b>grid-widget cell-box obeys vertical justification</b>: <a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> check-box cells (see
<a href="classes/cg/check-box-column-mixin.htm"><code>check-box-column-mixin</code></a>) now
obey its <a href="operators/cg/c/cell-vertical-justification.htm"><b>cell-vertical-justification</b></a> method (previously
it always acted as if the value was <code>:top</code>).
</li>
<li id="248">
<b>Bug with grid read-cell-value interacting with AllegroCache is
fixed</b>: a bug was fixed where drawing a grid cell could break
badly if its <a href="operators/cg/r/read-cell-value.htm"><b>read-cell-value</b></a>
method accessed an Allegrocache slot in client-server mode. Waiting on
the socket stream for a reply had allowed further messages to be
handled, which could make a nested access to the object during
scrolling, for example. <a href="operators/cg/r/read-cell-value.htm"><b>read-cell-value</b></a> and <a href="operators/cg/w/write-cell-value.htm"><b>write-cell-value</b></a> now suppress handling further
messages until they return. An application's custom <a href="operators/cg/r/redisplay-window.htm"><b>redisplay-window</b></a> method could have a similar
problem, in which case it should wrap a call to <a href="operators/mp/with-message-interrupts-disabled.htm"><b>mp:with-message-interrupts-disabled</b></a> around the
code that does a process-wait.
</li>
<li id="249">
<b>sort-grid is now robust against missing widget-window</b>: <a href="operators/cg/s/sort-grid.htm"><b>sort-grid</b></a> no longer breaks if the
<a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> has no <a href="classes/cg/widget-window.htm"><code>widget-window</code></a> at the time. The
<a href="operators/cg/s/sort-column.htm"><b>sort-column</b></a> property may now
be specified with a :sort-column initarg.  A <a href="classes/cg/grid-column.htm"><code>grid-column</code></a> name may now be passed to <a href="operators/cg/s/sort-grid.htm"><b>sort-grid</b></a> as documented, rather than
only a grid-column object.
</li>
<li id="250">
<b>New generic function cell-widget</b>: a <a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> application may define methods on
the new generic function <a href="operators/cg/c/cell-widget.htm"><b>cell-widget</b></a> to use the pre-defined cell widgets
in arbitrary cells rather than only in particular grid columns for
each type of widget.
</li>
<li id="251">
<b>New button-fills-cell property for
static-text-and-button-column-mixin</b>. The <a href="classes/cg/static-text-and-button-column-mixin.htm"><code>static-text-and-button-column-mixin</code></a> class has a
new <a href="operators/cg/b/button-fills-cell.htm"><b>button-fills-cell</b></a> property
that causes the button to fill the grid cell, with the text inside it.
</li>
<li id="252">
<b>Function that is the value of the button-function property of
static-text-and-button-column-mixin instances now takes six
arguments</b>. If an application uses the <a href="classes/cg/static-text-and-button-column-mixin.htm"><code>static-text-and-button-column-mixin</code></a> (for <a href="classes/cg/grid-widget.htm"><code>grid-widget</code></a> columns), then the
function that is the value of the <a href="operators/cg/b/button-function.htm"><b>button-function</b></a> property should now take two
additional arguments for the row-number and column-number (making six
arguments in all). For backward compatibility, the Common Graphics
code will still handle old functions that do not take these arguments,
but all <a href="operators/cg/b/button-function.htm"><b>button-function</b></a>
functions now should officially accept them.  So a button function
could now be defined like this:
<pre id="253">
(defun my-button-function
  (grid-widget data-object row column row-number column-number)
  ...)
</pre>
<p id="254">
Or this alternative would work in both 8.0 and 7.0 and earlier:
</p>
<pre id="255">
(defun my-button-function
  (grid-widget data-object row column
	       &optional row-number column-number)
</pre>
</li>
<li id="256">
<b>New function make-message-window and macro
with-message-window</b>. <a href="operators/cg/m/make-message-window.htm"><b>make-message-window</b></a> creates a window suitable
for displaying as a message window. <a href="operators/cg/w/with-message-window.htm"><b>with-message-window</b></a> creates and displays such a
window while code is run.
</li>
<li id="257">
<b>New function import-pixmaps</b>. The new function <a href="operators/cg/i/import-pixmaps.htm"><b>import-pixmaps</b></a> makes it easy to convert a set of
.bmp pixmap files into lisp source code for embedding the pixmaps into
the single image file of a delivered application.
</li>
<li id="258">
<b>A Common Graphics window may now be larger than the screen if
desired</b>. After creation, an application's <a href="operators/cg/t/track-limits.htm"><b>track-limits</b></a> method (if any) can constrain the
size of the window as before.
</li>
<li id="259">
<b>Rich-edit functionality</b>: the functions <a href="operators/cg/r/rich-edit-get-color.htm"><b>rich-edit-get-color</b></a>, <a href="operators/cg/r/rich-edit-get-font.htm"><b>rich-edit-get-font</b></a>, <a href="operators/cg/t/toggle-bold.htm"><b>toggle-bold</b></a>, <a href="operators/cg/t/toggle-italic.htm"><b>toggle-italic</b></a>, <a href="operators/cg/t/toggle-underline.htm"><b>toggle-underline</b></a>, <a href="operators/cg/t/toggle-bullets.htm"><b>toggle-bullets</b></a>, <a href="operators/cg/l/left-justify.htm"><b>left-justify</b></a>, <a href="operators/cg/c/center-justify.htm"><b>center-justify</b></a>, <a href="operators/cg/r/right-justify.htm"><b>right-justify</b></a> are used by <a href="classes/cg/rich-edit-multipic.htm"><code>rich-edit-multipic</code></a> widgets and <a href="classes/cg/menu-bar.htm"><code>menu-bar</code></a>s on <a href="classes/cg/rich-edit-dialog.htm"><code>rich-edit-dialog</code></a>s. (These were avilable but not
documented in 7.0.) Also see <a href="operators/cg/f/funcall-menu-item-with-rich-edit.htm"><b>funcall-menu-item-with-rich-edit</b></a>.
</li>

<li id="260">
<b>draw-to-x-y</b>: like <a href="operators/cg/d/draw-to.htm"><b>draw-to</b></a>, <a href="operators/cg/d/draw-to-x-y.htm"><b>draw-to-x-y</b></a> draws from the current position to a
location, but the location is specified with coordinates rather than a
position.
</li>
<li id="261">
<a href="operators/cg/d/drag-and-drop-mouse-moved.htm"><b>drag-and-drop-mouse-moved</b></a>:
allows added code to be run when the mouse is moved during a drag.
</li>

<li id="262">

<b>New keyword argument for set-selection</b>. <a href="operators/cg/s/set-selection.htm"><b>set-selection</b></a> has a new keyword
argument<i>scroll</i> to scroll the selection into view
if needed. <b>This entry was not included in the originally released
version of these Release Notes.</b>

</li>

</ol>





<hr><h2 id="263"><a name="ide-release-notes-2">8.5 IDE release notes</a></h2>


<ol>
<li id="264">
<b>The IDE Help facility now can use an instance of the new CG
html-browser dialog</b>, to display IDE help inside the IDE rather
than in a standalone HTML browser program using
invoke-private-html-dialog.  You can return to the old behavior if
needed by setting the new <a href="operators/ide/use-cg-html-browser.htm"><b>use-cg-html-browser</b></a> ide configuration option to
<code>nil</code>.  In the new browser you can, for
example, select a code example and then invoke the IDE's <a href="ide-menus-and-dialogs/tools-menu.htm#incremental-evaluation">Tools | Incremental Evaluation</a>
command on it directly, rather than first copying the example code to
the editor. One disadvantage is that there is no string search in the
CG HTML control (because Microsoft's WebBrowser OLE control does not
appear to provide it).
</li>
<li id="265">
<b>New use-cg-html-browser configuration option</b>. When the <a href="operators/ide/use-cg-html-browser.htm"><b>use-cg-html-browser</b></a> option is
true, help is displayed in the Common Graphics <a href="classes/cg/html-browser.htm"><code>html-browser</code></a>. This is more reliable and allows
using IDE menu commands directly on the help page but (because of
apparent limitations of the associated OCX widget) does not provide a
string search capability. If you try to search, you will get a dialog
that allows you to display the text in a third-party browser which
supports such searches. If you set the value to <code>nil</code>, then the third party browser will be used all
the time.
</li>
<li id="266">
<b>Changes to the behavior of save-options-to-user-specific-file on
Windows</b>: the function <a href="operators/ide/save-options-to-user-specific-file.htm"><b>save-options-to-user-specific-file</b></a>, which
allows personalized <i>prefs.cl</i> files (with personal options
settings) on multi-user machines, now uses Windows-specific
directories like My Documents or Personal on Windows, rather than
using the value of a HOMEDRIVE or HOMEPATH environment variable.See
also <a href="operators/windows/special-windows-directory.htm"><b>special-windows-directory</b></a> which determines
the path of such directories.  Also the default value of <a href="operators/ide/save-options-to-user-specific-file.htm"><b>save-options-to-user-specific-file</b></a> is
now true.
</li>
<li id="267">
<b>Trace dialog faster, can restrict function traced</b>: the <a href="ide-menus-and-dialogs/trace-dialog.htm">Trace Dialog</a> displays
several times more quickly that in earlier releases. The <a href="operators/cg/i/inhibit-trace-for-object.htm"><b>inhibit-trace-for-object</b></a> option allows
trace to be disables in the event-handler process of specified
windows.
</li>
<li id="268">
<b>IDE configuration option ide-html-history</b>: <a href="operators/ide/ide-html-history.htm"><b>ide-html-history</b></a> allows saving of
previously-viewed HTML pages.
</li>
<li id="269">
<b>Inspector displays changed property values in a bold font</b>. A
property value will now be displayed in a bold font in the inspector
if it is not equivalent to the programmatic default value for that
property. This highlights values that you've changed, as well as some
sample values that you probably want to change for widgets placed onto
forms. A read-only value will never be bold. A handful of properties
are never shown bold because they generally don't have meaningful
default values and are more distracting than useful when made bold;
these exceptions include the properties <a href="operators/cg/c/child-p.htm"><b>child-p</b></a>, <a href="operators/cg/d/device.htm"><b>device</b></a>, <a href="operators/cg/t/tab-position.htm"><b>tab-position</b></a>, <a href="operators/cg/l/left.htm"><b>left</b></a>, <a href="operators/cg/t/top.htm"><b>top</b></a>, <a href="operators/cg/w/width.htm"><b>width</b></a>, <a href="operators/cg/h/height.htm"><b>height</b></a>, <a href="operators/cg/d/dialog-items.htm"><b>dialog-items</b></a>, and <a href="operators/cg/p/pixmap-use-handle.htm"><b>pixmap-use-handle</b></a>.
</li>
<li id="270">
<b>The File | Save command is now implemented for the Runtime Analyzer
Results dialog</b>. You can now save displayed analysis outline to a
text file as well as saving the history. See the description of the
<a href="ide-menus-and-dialogs/runtime-analyzer-results-dialog.htm">Runtime Analyzer Results
dialog</a>. There are now two buttons on that dialog: the new
<b>Save to File</b> and the older <b>Save</b> button, now renamed
<b>Save to History</b>.
</li>
<li id="271">
<b>Save command on Class Browser</b>. The <b>Save</b> command is
implemented for the <a href="ide-menus-and-dialogs/class-browser-dialog.htm">Class Browser</a> outline, to save a
class hierarchy as indented text to a text file.
</li>
<li id="272">
<b>The Class Browser dialog now uses a multi-picture-button rather
than a tab-control</b>. This was mostly for compatibility with the GTK
port, where the tab-control cannot have multiple rows of tabs.  Though
the set of choices is the same, the new buttons display icons rather
than text, so you may need to learn which button is which by holding
the mouse cursor over the buttons until their tooltips appear.
</li>
<li id="273">
<b>More things can be searched backwards</b>. Searching backward now
works in item-lists, list-views, the inspector, and the tree grapher.
(This had worked only in text windows like the IDE editor.)
</li>
<li id="274">
<b>Help on widget sublcasses</b>: invoking help on a user-subclassed
widget on a form will find the help for the built-in superclass.
</li>
<li id="275">
<b>Help command improvements</b>: the Help command is now included
reliably on the right-button shortcut menu of the inspector.
</li>
<li id="276">
<b>Shortcut menus</b>. The shortcut menu for a form window is now
accessible on the title-bar and menu-bar, in case widgets cover the
entire form interior.
</li>
<li id="277">
<b>Changing the default package (in the Project Manager dialog)</b> of
an existing project should now be less troublesome, but it is still
far better to decide on the package name when first setting up the
project (especially before creating any form windows).
</li>
<li id="278">
<b>Handling non-existent package in a project</b>: if you type the
name of a non-existing package into the Project Manager dialog, it
automatically creates a package of that name. This new package had
used the excl and cl packages, even though the code that is generated
for the project does not make the project package use those packages.
That could lead to errors loading the project into a later lisp
session when the project package would no longer use those packages as
it had initially.  So the project manager no longer makes the
automatically created package use those packages.
</li>
<li id="279">
<b>Source code colorization</b>. Source code colorization is no longer
done in an IDE editor buffer if the buffer has been saved to a file
and the file does not have one of the common extensions for lisp
source code (.cl, .lsp, or .lisp).
</li>
<li id="280">
<b>open-files-in-gnu-emacs mode</b>: when using the <a href="operators/ide/open-files-in-gnu-emacs.htm"><b>open-files-in-gnu-emacs</b></a> mode, the IDE's Save All
command will tell emacs to save all of its unsaved buffers.
</li>
<li id="281">
<b>Compiling a project</b>: when you compile the current project, if
it has multiple subprojects and the multiple subprojects all in turn
have a common subproject, then that common subproject will be compiled
only once rather than once for each subproject that has it as a
subproject.
</li>
<li id="282">
<b>Some symbols no longer exported from cg package</b>. A handful of
overly-short IDE symbols were exported from CG to avoid a problem with
an app using the symbols as local variables that end up in the IDE
package, which is not available in a standalone application.  The
symbols are still exported from the ide package as before, and most of
them are project accessor functions that are probably rarely used by
users.  The symbols are: <code>project</code>,
<code>projects</code>, <code>libraries</code>,
<code>module</code>, <code>modules</code>,
<code>module-p</code>, <code>verbose</code>,
<code>loaded</code>, <code>partners</code>, and
<code>followers</code>.
</li>
<li id="283">
<b>Optional arguments to full-compile-project</b>: the optional
arguments of <a href="operators/ide/full-compile-project.htm"><b>full-compile-project</b></a> are now keyword arguments
to match the similar function <a href="operators/ide/compile-project.htm"><b>compile-project</b></a>.  Usually you would use the menu
command rather than calling this function programmatically, but if you
do call the function with any of its optional arguments then you will
need to change the call to pass keyword arguments instead.
</li>
<li id="284">
<b>Lost IDE windows</b>: if an IDE window gets "lost" by being moved
outside of the visible screen area (perhaps programmatically), then
the Window List dialog's Show button will move it into view (in
addition to selecting the window as usual).
</li>
<li id="285">
<b>Moving to the beginning of a definition in the IDE editor</b>: in
the IDE editor, the gesture to move to the beginning of the definition
(alt-uparrow in host mode or control-alt-A in emacs mode) will now
move to the beginning of the previous definition when the text cursor
is already at the beginning of a definition.  If there is no
definition that begins before the text cursor, it will move to the top
of the file.  Previously it did nothing in these cases.  The new
behavior emulates the similar command in emacs.
</li>
<li id="286">
<b>Missing project files</b>: when there are missing project files
while opening or running a project, you will now be given the
opportunity to locate the files with the file dialog.
</li>
<li id="287">
<b>Missing modules in a project</b>: when generating a standalone
application from a project, and it fails because a needed CG module
was not included, the error dialog will now mention the particular
module and offer to automatically add it and try the build again.
</li>
<li id="288">
<b>Names of editor buffers</b>: it's easier to find the name of an IDE
editor buffer that you're looking for when using the editor's pop-up
menu of all buffers (control-B in the default editor mode).  It now
displays the pathname-name by itself at the left, and sorts by that
name rather than by the whole pathname.
</li>
<li id="289">
<b>New IDE configuration option use-ide-parent-window</b>. There's a
new configuration option to use a single parent window for the IDE,
called <a href="operators/ide/use-ide-parent-window.htm"><b>use-ide-parent-window</b></a>.
It's on by default on GTK because owner window support is not good
there, but is NOT on by default on Windows because child windows
cannot have menu-bars in Windows, and form windows therefore will not
show their menu-bars.  The new option has not been tested rigorously
on Windows, but you can change it by evaluating <code>(setf
(use-ide-parent-window (configuration *ide-system*)) t)</code> in
the IDE, and then restarting the IDE.
</li>
<li id="290">
<b>Project package now used when a project is run</b>. When doing a
<a href="ide-menus-and-dialogs/run-menu.htm#run-project">Run |
Run Project</a> or running a standalone application that was made
from a project, the value of <a href="../ansicl/dictentr/package.htm"><code>*package*</code></a> will initially be the project's
default package. (This is not done, however, by <a href="ide-menus-and-dialogs/run-menu.htm#run-form">Run | Run
Form</a> because the form runs asynchronously in an existing IDE
Listener process.) Formerly the package property of a project was
used only for writing an <a href="../ansicl/dictentr/in-packa.htm"><b>in-package</b></a> form to any new code files that the
project system generates.
</li>
<li id="291">
<b>Help menu now has Write a Bug Report item</b>. The <a href="ide-menus-and-dialogs/help-menu.htm#">Help</a> menu now has a
<a href="ide-menus-and-dialogs/help-menu.htm#bug-report">Help
| Write a bug Report</a> item for use when there is no backtrace
showing (the <a href="ide-menus-and-dialogs/debug-window-after-error.htm">Debug Window after an error</a>
also has a bug report button).  The new menu item lets you choose any
subset of processes, to add their backtraces to the bug report.
</li>
<li id="292">
<b>maker-function now uses interior argument instead of exterior
argument</b>. When a form window in a project is saved, it will now
generate the <a href="operators/ide/maker-function.htm"><b>maker-function</b></a> so
that it has a new <i>interior</i> parameter with a
default value that is equal to the form's current interior, and the
<i>exterior</i> parameter will no longer have a default
value.  This will cause the running window to be created (by default)
with the same interior on machines or operating systems where the
title bar height or border thickness are different.  This avoids, for
example, buttons at the bottom of a dialog being partly clipped off
when a generated application is run on a different machine that has a
larger title bar height. One possible drawback to this design change
would be if an application positions multiple windows that are made
from forms so that their exteriors are adjacent or spaced by a certain
amount.  In that case, the application could pass the
<i>exterior</i> argument to the <a href="operators/ide/maker-function.htm"><b>maker-function</b></a> explicitly.  Or it could create
each window in :shrunk <a href="operators/cg/s/state.htm"><b>state</b></a>,
then move or resize it as needed once its exterior is known, and then
expose it.
</li>
<li id="293">
<b>New navigator examples for cell-widget and windows with multiple
panes</b>. See the Examples tab of the <a href="ide-menus-and-dialogs/navigator-dialog.htm">Navigator Dialog</a>.
</li>
<li id="294">
<b>Some changes to alignment lines and snapping on forms</b>. When
dragging a widget (or block of widgets) on a form, alignment lines and
snapping (see <a href="operators/ide/snap-to-components.htm"><b>snap-to-components</b></a>) will no longer be done
between the top of a moving widget and the bottom of a non-moving
widget, or vice versa, or between a left side and a right.  Alignment
and snapping are now done only between two top sides, two bottom
sides, two left sides, or two right sides.  The cases that were
removed are generally not useful and cluttered things up.  Also, the
alignment lines should now reliably be drawn so that they extend to
encompass all of the widgets that are currently aligned with the
moving widget(s), rather than only some of them.  Alignment lines and
snapping will also be done between a moving widget (or block of
widgets) and their former position, to make it easy to move the
widgets only horizontally or only vertically.
</li>
</ol>

<hr><h2 id="295"><a name="opening-earlier-projects-3">8.5.1 Opening projects from releases prior to 8.0</a></h2>

<p id="296">
Allegro CL 7.0 projects should open without problem in Allegro CL
8.0. For projects from releases prior to 7.0, see the
<b>version-70-release-notes.htm</b>
</p>





<hr><hr><h2 id="297"><a name="astore-not-supported-1">9.0 AllegroStore not available in Allegro CL 8.0</a></h2>

<p id="298">
AllegroStore is not  available in Allegro CL version 8.0. Users who
wish to continue using AllegroStore should use version 7.0.
</p>
<p id="299">
There is a new database product, AllegroCache. See
<a href="#acl-new-in-80">Section 6.1.2 Major new features in Allegro CL 8.0</a>.
</p>

<hr><hr><h2 id="300"><a name="soap-release-1">10.0 Release notes for SOAP</a></h2>

<p id="301">
<b>Major Additions or Revisions:</b>
</p>
<ul>
<li id="302">
<b>Added support for nillable attributes</b> for SOAP elements. The
<code>nillable</code> option, when non-<code>nil</code>, adds the <b>"xsd:nillable='true'"</b> attribute
to the element (see <a href="soap.htm#elem-def-1">Element
Definition</a> in <a href="soap.htm">soap.htm</a>).
</li>
<li id="303">
<b>Recognize all Schema components</b> (some Schema features are still
ignored, but will no longer signal errors).
</li>
<li id="304">
<b>New generic function</b> <a href="soap.htm#wsdl-generate-code-op-bookmarkxx"><b>wsdl-generate-code</b></a> allows application
programmers to modify the code generated by <a href="soap.htm#make-client-interface-op-bookmarkxx"><b>make-client-interface</b></a> and <a href="soap.htm#make-server-interface-op-bookmarkxx"><b>make-server-interface</b></a>.
</li>
</ul>
<p id="305">
Other changes include:
</p>
<ul>
<li id="306">
The generic function <a href="soap.htm#define-soap-element-op-bookmarkxx"><b>define-soap-element</b></a> now has a
<i>nillable</i> keyword argument which marks elements as
nillable.
</li>
<li id="307">
<a href="soap.htm#encode-wsdl-file-op-bookmarkxx"><b>encode-wsdl-file</b></a> has a new
<i>target-package</i> keyword argument.
</li>
<li id="308">
New function <a href="soap.htm#soap-new-environment-op-bookmarkxx"><b>soap-new-environment</b></a> resets the SOAP
environment.
</li>
<li id="309">
New function <a href="soap.htm#soap-make-fault-op-bookmarkxx"><b>soap-make-fault</b></a> creates an encoded fault
instance.
</li>
<li id="310">
New <i>stream</i> argument to <a href="soap.htm#decode-wsdl-source-op-bookmarkxx"><b>decode-wsdl-source</b></a>
allows input to come from a stream.
</li>
<li id="311">
New <i>xml-syntax</i>, <i>class</i>, and
<i>init</i> keyword arguments to <a href="soap.htm#decode-wsdl-file-op-bookmarkxx"><b>decode-wsdl-file</b></a>,
<a href="soap.htm#decode-wsdl-source-op-bookmarkxx"><b>decode-wsdl-source</b></a>, <a href="soap.htm#decode-wsdl-string-op-bookmarkxx"><b>decode-wsdl-string</b></a>, and <a href="soap.htm#decode-wsdl-at-uri-op-bookmarkxx"><b>decode-wsdl-at-uri</b></a>.
<i>xml-syntax</i> allows specifying whether to insist on
strict compliance with the standard. <i>class</i> allows
specifying a subclass <a href="soap.htm#wsdl-file-connector-class-bookmarkxx"><code>wsdl-file-connector</code></a> for the
connector. <i>init</i> allows specifying make-instance
arguments when creating an instance of the subclass.
</li>
</ul>


<hr><hr><h2 id="312"><a name="rpc-1">11.0 Release notes for Allegro RPC</a></h2>

<p id="313">
There are new RPC functionality allowing users to manage multiple Lisp
images. See <a href="rpc.htm#several-images-1">Running
several communicating Allegro CL images</a> in
<a href="rpc.htm">rpc.htm</a>.
</p>
<p id="314">
The <i>re-connect</i> keyword argument to <a href="operators/rpc/make-rpc-client.htm"><b>make-rpc-client</b></a> can now have the
value <i>:connect</i>. If specified, when a re-connect
attempt fails, the function will try a new connect. <a href="operators/rpc/rpc-open-client.htm"><b>rpc-open-client</b></a> is also affected since it
may use clients made by <a href="operators/rpc/make-rpc-client.htm"><b>make-rpc-client</b></a>.
</p>

<hr><hr><h2 id="315"><a name="jlinker-1">12.0 Release notes for jLinker</a></h2>

<p id="316">
Jlinker in ACL 8.0 adds significant new functionality.
A native Java interface allows the Lisp and Java parts
of an application to share the same address space.
Calls between Lisp and Java are comparable in speed
to foreign function calls.
</p>
<p id="317">
Arguments in calls to Java are converted using the information in the
Java method signature.  Consequently, calls to <a href="operators/jlinker/make-immediate-object.htm"><b>make-immediate-object</b></a> are now
redundant (but harmless).
</p>
<h3 id="318">
New Jlinker Native interface (JNI) 
</h3>

<p id="319">
There is now JNI support in the Jlinker. The new interface is
described in the <a href="jlinker.htm">jlinker.htm</a> and can be used
instead of the socket interface. The jlinker JNI interface depends on
the availability of the <b>libjvm</b> shared library in the Java
installation. We have tested the jlinker JNI interface on some of the
machine and operating system combinations where we have found a
suitable Java distribution.
</p>
<p id="320">
The status on various platforms is as follows:
</p>

<ul>
<li id="321">
Windows: tested and working with Java 1.4.2 or later
</li>
<li id="322">
Linux x86 - tested and working with Java 1.4.2 or later (32-bit ACL and Java).
</li>
<li id="323">
Solaris - tested and working with Java 1.4.2 or later (32-bit ACL and Java)
</li>
<li id="324">
Mac OS X - Native (JNI) mode is disabled.
</li>
<li id="325">
Other UNIX - we have not located a suitable Java, hence not tested.
</li>
</ul>

<h3 id="326">
Non-backward-compatible change
</h3>

<ol>
<li id="327">
<b>Change to initial value of *jlinker-error-p*</b>: the default value
of the variable <a href="variables/jlinker/s_jlinker-error-p_s.htm"><code>*jlinker-error-p*</code></a> is now <code>t</code>.  In previous versions, the default value was
<code>nil</code>.
</li>
</ol>

<h3 id="328">
New functionality
</h3>

<p id="329">
The following variables and operators are defined:
</p>

<ul>
<li id="330">
<a href="operators/jlinker/jclass-paths.htm"><b>jclass-paths</b></a> (function)
</li>
<li id="331">
<a href="operators/jlinker/jget-properties.htm"><b>jget-properties</b></a>
(function)
</li>
<li id="332">
<a href="operators/jlinker/jget-property.htm"><b>jget-property</b></a>
(function)
</li>
<li id="333">
<a href="operators/jlinker/with-java-environment.htm"><b>with-java-environment</b></a> (macro)
</li>
<li id="334">
<a href="variables/jlinker/s_jlinker-init_s.htm"><code>*jlinker-init*</code></a> (variable)
</li>
<li id="335">
<a href="variables/jlinker/s_jni-library_s.htm"><code>*jni-library*</code></a> (variable)
</li>
</ul>

<p id="336">
jLinker documentation is in <a href="jlinker.htm">jlinker.htm</a>.
</p>

<h3 id="337">
Other jlinker changes
</h3>

<ul>
<li id="338">
<b>New keyword arguments to jlinker-init</b>. <a href="operators/jlinker/jlinker-init.htm"><b>jlinker-init</b></a> has new keyword
arguments (<i>classpath</i> and
<i>jar</i>) to specify the classpath and the jlinker.jar
file location.  Jlinker no longer modifies the CLASSPATH environment
variable.
</li>
<li id="339">
<b>On Windows, Jlinker can examine the Windows Registry to locate Java
components</b>. In typical installations, the user does not need to
customize anything in order to use Jlinker.
</li>
</ul>

<hr><hr><h2 id="340"><a name="aserve-1">13.0 Release notes for AllegroServe</a></h2>

<p id="341">
No notes at this time
</p>

<hr><hr><h2 id="342"><a name="misc-products-1">14.0 Release notes for IMAP and SMTP, XMLutils</a></h2>

<p id="343">
No significant changes to these utilities
</p>

<hr><hr><h2 id="344"><a name="eli-misc-1">15.0 Release notes for The Emacs/Lisp interface</a></h2>

<p id="345">
No significant changes.
</p>


<hr><hr><h2 id="346"><a name="clx-1">16.0 Availability of CLX for Allegro CL</a></h2>

<p id="347">
CLX (Common Lisp X) provides an interface between Common Lisp and the
X window system. All versions of Allegro CL include a compiled
version of CLX with the distribution. The <i>fasl</i>
file is <i>code/clx.fasl</i>, loaded by evaluating
<code>(require :clx)</code>. The Allegro CL products CLIM and
Allegro Composer use CLX. Users wanting low-level access to an X
server in Lisp may also want to use CLX.  CLX is not supported by
Franz Inc.
</p>
<p id="348">
The sources to CLX are supplied with the regular Allegro CL
distributions in the <i>contrib/clx/</i> directory. Note
that during installation, you are asked whether you wish to install
the <i>contrib/</i> directory and the default is not to
install it. The <i>contrib/</i> directory is not
included in the Trial distribution, but Trial users can download the
CLX sources from the Franz Inc. website as described next.
</p>
<p id="349">
The sources to CLX are also available on the Franz Inc. web site (<a href="http://www.franz.com/">www.franz.com</a>), at the location <a href="ftp://ftp.franz.com/pub/clx/">ftp://ftp.franz.com/pub/clx/</a>.
</p>

<hr><hr><h2 id="350"><a name="orblink-1">17.0 Release notes for Orblink</a></h2>

<p id="351">
No significant changes.
</p>


<hr><hr><h2 id="352"><a name="app-conformance-proj">Appendix A: Tightening of ANSI Conformance in Allegro CL</a></h2>

<p id="353">
There were many changes in release 7.0 tightening Allegro CL's
compliance with the ANSI spec (based in large part on the work of Paul
Dietz, a user of Allegro CL who has been developing an extensive test
suite for ANSI Common Lisp). There have been a few additional changes
in 8.0, though none of significant user-visibility. Users interested
in this project should see <b>Tightening of ANSI Conformance in Allegro
CL</b> and its subsections in
<b>version-70-release-notes.htm</b>.
</p>

</body><hr><p id="2"><small>Copyright (c) 1998-2008, Franz Inc. Oakland, CA., USA. All rights reserved.</small><br><small>Documentation for Allegro CL version 8.2. This page was not revised from the 8.1 page.</small><br>
<small>Created 2009.4.7.</small>
<br></p><table border="0" width="100%" cellpadding="1" cellspacing="0"><tr><td colspan="2" bgcolor="#00FFFF"><table border="0" cellpadding="5" cellspacing="3"><tr><td align="left" bgcolor="#00FFFF"><a href="contents.htm"><b>ToC</b></a></td><td align="left" bgcolor="#00FFFF"><a href="introduction.htm"><b>DocOverview</b></a></td><td align="left" bgcolor="#00FFFF"><a href="cgide.htm"><b>CGDoc</b></a></td><td align="left" bgcolor="#00FFFF"><a href="release-notes.htm"><b>RelNotes</b></a></td><td align="left" bgcolor="#00FFFF"><a href="http://www.franz.com/support/faqs/"><b>FAQ</b></a></td><td align="left" bgcolor="#00FFFF"><a href="index.htm"><b>Index</b></a></td><td align="left" bgcolor="#00FFFF"><a href="permuted-index.htm"><b>PermutedIndex</b></a></td></tr></table></td><td align="right"><b>Allegro CL version 8.2</b><br><small><a href="introduction.htm#updates-s"></a></small></td></tr></table></html>