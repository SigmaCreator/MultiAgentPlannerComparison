[ DESCRIPTIONS File Last Updated: 28-Aug-15 18:56:44 GMT ]

This directory contains all the publicly available patches for:

     product: Allegro CL
     version: 10.0
     architecture: linux86
     directory: code/

There are two types of files in this directory:

   DESCRIPTIONS
    -- This information file.

   <name>.fasl
    -- (where <name> is patch name).  These are the actual patch
       files.  Descriptions of the individual patches are below.  You can
       take as many or as few of these patch files as you want or think
       you need.  These patch files should be installed in the
       code subdirectory of your Allegro CL distribution
       directory (the directory into which the Allegro CL distribution
       tape or CD was read).

For more information on installing and using patches, see
ftp://ftp.franz.com/pub/patches/10.0/README.

Patch File Descriptions

   This section lists the descriptions of the patch files available in
   this directory.  All patches publicly available as of the date on
   the top of this file are listed here.  The descriptions listed are
   admittedly cryptic and may not reveal all the problems that the
   patches fix.  Also not every "known" problem is fixable by a patch
   file.  Contact Franz Inc. (see below) if you have questions about
   patches or have a problem which seems not to be fixed by any of the
   patches in this directory.

   If you have any questions about any patch or the patch loading
   procedure, please contact Franz Inc. by email at bugs@franz.com, by
   phone at (510) 452-2000 (during US Pacific time zone work hours), or
   by fax at (510) 452-0182.


_ _ _ _ _ Descriptions Listing _ _ _ _ _

Patch                  Description

xml-rpc.001 : v1: fix passing of fault-code to the client.
   Note: Patch can be manually loaded into running lisp.
webactions.001 : v1: 1.13: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
st-json.001 : v1: add provide.
   Note: Patch can be manually loaded into running lisp.
ssl.002 : v2: fix reloading of OpenSSL libraries for applications;
v1: use system OpenSSL libraries.
   Note: Patch can be manually loaded into running lisp.
ssl.001 : v1: use system OpenSSL libraries.
   Note: Patch can be manually loaded into running lisp.
soap.001 : v1: Avoid error when WSDL specifies an empty body.
   Note: Patch can be manually loaded into running lisp.
smputil.001 : v1: Record memtrace values, compile memtrace wrappers.
   Note: Patch can be manually loaded into running lisp.
sax.002 : v2: fix bug in v1 patch;
v1: sax-parse-stream :close-on-eof keyword.
   Note: Patch can be manually loaded into running lisp.
sax.001 : v1: sax-parse-stream :close-on-eof keyword.
   Note: Patch can be manually loaded into running lisp.
proc2common.002 : v2: internal for rfe10269;
v1: add with-locked-queue macro.
   Note: Patch can be manually loaded into running lisp.
proc2common.001 : v1: add with-locked-queue macro.
   Note: Patch can be manually loaded into running lisp.
proc2-s.001 : v1: add with-locked-queue macro.
   Note: Patch can be manually loaded into running lisp.
osi.003 : v3: fix for non-smp fork (non-Windows);
v2: with-open-temp-file no longer generates compiler warnings;
v1: with-open-temp-file: :delete :on-error.
   Note: Patch can be manually loaded into running lisp.
osi.002 : v2: with-open-temp-file no longer generates compiler warnings;
v1: with-open-temp-file: :delete :on-error.
   Note: Patch can be manually loaded into running lisp.
osi.001 : v1: with-open-temp-file: :delete :on-error.
   Note: Patch can be manually loaded into running lisp.
lldb.001 : v1: Fix :step over 0 to hit all level 0 forms.
   Note: Patch can be manually loaded into running lisp.
json-rpc.fasl (version 0): v0: Initial version of patch.
   Note: Patch can be manually loaded into running lisp.
json-rpc-aserve.fasl (version 0): v0: Initial version of patch.
   Note: Patch can be manually loaded into running lisp.
ide-process-browser.001 : v1: the Processes dialog unpardonably sorted sys:*all-processes*
   Note: Loaded only if (featurep :ide) returns non-nil.
fileutil.001 : v1: Fix for map-over-directory w/:filter and argument directory.
   Note: Patch can be manually loaded into running lisp.
ffdyn.001 : v1: bug24091: fix app restart error with shared library handling.
deflate.001 : v1: add hook run when a deflate stream closes.
   Note: Patch can be manually loaded into running lisp.
debug.001 : v1: Determine local variable liveness like the gc does when at a census point.
   Note: Patch can be manually loaded into running lisp.
datetime.001 : v1: improve performance of ut-to-date-time.
   Note: Patch can be manually loaded into running lisp.
cg-touch.001 : The gesture-event touchscreen API didn't work on Windows 10.
   Note: Loaded only if (featurep :common-graphics) returns non-nil.
cg-pixmap-file-io.001 : v1: load-pixmap and load-texture-info on GTK are missing a new argument
   Note: Loaded only if (featurep :common-graphics) returns non-nil.
aserve.006 : v6: 1.3.41: fix multi-directory clp file rewriting;
v5: 1.3.40: add methods for socket-bytes-read|written;
v4: 1.3.39: workaround for a bug in decoding chunked request bodies over ssl.
v3: 1.3.38: call make-ssl-client-stream with :method instead of :ssl-method;
v2: 1.3.37: add trailer support
v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
aserve.005 : v5: 1.3.40: add methods for socket-bytes-read|written;
v4: 1.3.39: workaround for a bug in decoding chunked request bodies over ssl.
v3: 1.3.38: call make-ssl-client-stream with :method instead of :ssl-method;
v2: 1.3.37: add trailer support
v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
aserve.004 : v4: 1.3.39: workaround for a bug in decoding chunked request bodies over ssl.
v3: 1.3.38: call make-ssl-client-stream with :method instead of :ssl-method;
v2: 1.3.37: add trailer support
v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
aserve.003 : v3: 1.3.38: call make-ssl-client-stream with :method instead of :ssl-method;
v2: 1.3.37: add trailer support
v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
aserve.002 : v2: 1.3.37: add trailer support
v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
aserve.001 : v1: 1.3.36: cosmetic: bump version #; code same as 10.0 initial release.
   Note: Patch can be manually loaded into running lisp.
asdf.001 : v1: update to 3.1.6.
   Note: Patch can be manually loaded into running lisp.
aodbc_v2.003 : v3: dbi:sql with :query t would always use the defaault db hstmt.
v2: Fix bug in previous patch, breaing some API functions.
v1: Export dbi:get-statement-handle and dbi:free-statement-handle.
   Note: Patch can be manually loaded into running lisp.
aodbc_v2.002 : v2: Fix bug in previous patch, breaing some API functions.
v1: Export dbi:get-statement-handle and dbi:free-statement-handle.
   Note: Patch can be manually loaded into running lisp.
aodbc_v2.001 : v1: Export dbi:get-statement-handle and dbi:free-statement-handle.
   Note: Patch can be manually loaded into running lisp.
acldns.001 : v1: recognize nameservers with ipv6 addresses
   Note: Patch can be manually loaded into running lisp.
acache.001 : v1: update stub file message to include version and changelog.
   Note: Patch can be manually loaded into running lisp.
acache-3.0.8.fasl (version 0): acache 3.0.8 - improve stub message
   Note: Patch can be manually loaded into running lisp.
acache-3.0.7.fasl (version 0): acache 3.0.7 - client/server expression cursor fix
   Note: Patch can be manually loaded into running lisp.
acache-3.0.6.fasl (version 0): acache 3.0.6 - same as 3.0.5, which was messed up on some platforms
   Note: Patch can be manually loaded into running lisp.
