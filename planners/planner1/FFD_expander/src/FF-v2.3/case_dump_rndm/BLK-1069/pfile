(define  (problem zeno5_2)
(:domain zeno-travel)
(:objects
 	fl0 - flevel
	fl1 - flevel
	fl2 - flevel
	fl3 - flevel
	fl4 - flevel
	fl5 - flevel
	fl6 - flevel
	city1 - city
	city2 - city
	city3 - city
	city4 - city
	city5 - city
	city6 - city
	city7 - city
	plane1 - aircraft
	plane2 - aircraft
	plane3 - aircraft
	plane4 - aircraft
	plane5 - aircraft
	plane6 - aircraft
	plane7 - aircraft
	plane8 - aircraft
	plane9 - aircraft
	plane10 - aircraft
	plane11 - aircraft
	plane12 - aircraft
	plane13 - aircraft
	plane14 - aircraft
	plane15 - aircraft
	person1 - person
	person2 - person
	person3 - person
	person4 - person
	person5 - person
	person6 - person
	person7 - person
	person8 - person
	person9 - person
	person10 - person
)
(:init
 	(at plane1 city5)
	(at plane2 city5)
	(at plane3 city7)
	(at plane4 city3)
	(at plane5 city7)
	(at plane6 city1)
	(at plane7 city7)
	(at plane8 city4)
	(at plane9 city2)
	(at plane10 city1)
	(at plane11 city7)
	(at plane12 city3)
	(at plane13 city4)
	(at plane14 city2)
	(at plane15 city4)
	(at person1 city7)
	(at person2 city3)
	(at person3 city2)
	(at person4 city5)
	(at person5 city7)
	(at person6 city3)
	(at person7 city7)
	(at person8 city7)
	(at person9 city1)
	(at person10 city4)
	(fuel-level plane1 fl4)
	(fuel-level plane2 fl4)
	(fuel-level plane3 fl4)
	(fuel-level plane4 fl5)
	(fuel-level plane5 fl1)
	(fuel-level plane6 fl4)
	(fuel-level plane7 fl0)
	(fuel-level plane8 fl5)
	(fuel-level plane9 fl3)
	(fuel-level plane10 fl1)
	(fuel-level plane11 fl5)
	(fuel-level plane12 fl4)
	(fuel-level plane13 fl6)
	(fuel-level plane14 fl6)
	(fuel-level plane15 fl5)
	(next fl0 fl1)
	(next fl1 fl2)
	(next fl2 fl3)
	(next fl3 fl4)
	(next fl4 fl5)
	(next fl5 fl6))
(:goal (and 	(at plane1 city5)
	(at person1 city4)
	(at person2 city7)
	(at person3 city7)
	(at person4 city4)
	(at person5 city1)
)))