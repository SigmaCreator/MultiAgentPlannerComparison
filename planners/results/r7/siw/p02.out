timeout: failed to run command ‘./plan.sh’: Permission denied

real	0m0.001s
user	0m0.000s
sys	0m0.000s

Traceback (most recent call last):
  File "map_lapkt.py", line 7, in <module>
    from ma_to_pddl import PlanningProblem
ValueError: bad marshal data (unknown type code)

real	0m0.012s
user	0m0.008s
sys	0m0.000s

Traceback (most recent call last):
  File "map_lapkt.py", line 7, in <module>
    from ma_to_pddl import PlanningProblem
ValueError: bad marshal data (unknown type code)

real	0m0.012s
user	0m0.004s
sys	0m0.004s

Traceback (most recent call last):
  File "map_lapkt.py", line 7, in <module>
    from ma_to_pddl import PlanningProblem
ValueError: bad marshal data (unknown type code)

real	0m0.009s
user	0m0.004s
sys	0m0.000s

Traceback (most recent call last):
  File "map_lapkt.py", line 7, in <module>
    from ma_to_pddl import PlanningProblem
ValueError: bad marshal data (unknown type code)

real	0m0.010s
user	0m0.000s
sys	0m0.008s

Domain: k-domain.pddl Problem: k-problem.pddl
Generating Datalog program... [0.010s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.017s wall-clock]
Preparing model... [0.020s CPU, 0.022s wall-clock]
Generated 166 rules.
Computing model... [0.210s CPU, 0.217s wall-clock]
4462 relevant atoms
7813 auxiliary atoms
12275 final queue length
14995 total queue pushes
Completing instantiation... [0.130s CPU, 0.139s wall-clock]
goal relaxed reachable: True
487 atoms
Computing fact groups...
Finding invariants...
27 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
194 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.016s wall-clock]
Deterministic 2740 actions
0 negated fluents created
Invariants 219

 Match tree built with 2740 nodes.

rel_plan size: 45
#RP_fluents 53
Caption
{#goals, #UNnachieved,  #Achieved} -> IW(max_w)

{12/12/0}:IW(1) -> [2][3]rel_plan size: 43
#RP_fluents 51
{12/11/1}:IW(1) -> [2][3][4]rel_plan size: 40
#RP_fluents 48
{12/10/2}:IW(1) -> [2][3][4]rel_plan size: 37
#RP_fluents 45
{12/9/3}:IW(1) -> [2][3][4][5][6][7]rel_plan size: 33
#RP_fluents 39
{12/8/4}:IW(1) -> [2][3][4][5]rel_plan size: 29
#RP_fluents 34
{12/7/5}:IW(1) -> [2][3][4][5][6]rel_plan size: 24
#RP_fluents 27
{12/6/6}:IW(1) -> [2][3][4][5][6]rel_plan size: 21
#RP_fluents 24
{12/5/7}:IW(1) -> [2][3][4][5][6]rel_plan size: 18
#RP_fluents 21
{12/4/8}:IW(1) -> [2][3][4][5]rel_plan size: 15
#RP_fluents 18
{12/3/9}:IW(1) -> [2][3][4][5]rel_plan size: 12
#RP_fluents 15
{12/2/10}:IW(1) -> [2][3][4][5][6][7][8]rel_plan size: 5
#RP_fluents 7
{12/1/11}:IW(1) -> [2][3][4][5][6][7][8]rel_plan size: 0
#RP_fluents 0Plan found with cost: 55
Total time: 0.66
Nodes generated during search: 1
Nodes expanded during search: 0
Nodes pruned by bound: 786047
Average ef. width: 1
Max ef. width: 1

SIW+ search completed in 0.66 secs, found plan cost = 55

Private Objects: {'usv2': ['usv2'], 'usv3': ['usv3'], 'usv1': ['usv1'], 'usv4': ['usv4'], 'ugv4': ['ugv4'], 'ugv2': ['ugv2'], 'ugv3': ['ugv3'], 'ugv1': ['ugv1'], 'uav1': ['uav1'], 'uav2': ['uav2'], 'uav3': ['uav3'], 'uav4': ['uav4']}

Public Objects: ['cdm1', 'cdm2', 'ugv1Store', 'ugv2Store', 'ugv3Store', 'ugv4Store', 'usv1Store', 'usv2Store', 'usv3Store', 'usv4Store', 'area1', 'area2', 'area3', 'area4', 'area5', 'area6', 'area7', 'area8', 'area9', 'area10', 'area11', 'area12', 'area13', 'area14', 'area15', 'area16', 'area17', 'area18', 'area19', 'area20', 'disaster1', 'disaster2', 'disaster3', 'disaster4', 'disaster5', 'disaster6', 'box1', 'box2', 'box3']

Private Predicates: {('?agent', '-', 'robot'): [(at ?r - robot ?a - area), (store_of ?s - store ?r - robot), (have_picture ?r - robot ?d - disaster), (box_at ?b - box ?r - ugv), (have_water_sample ?r - usv ?a - area)]}


real	0m1.242s
user	0m1.224s
sys	0m0.008s

(sample_water usv4 usv4store area13)
(drop_sample usv4 usv4store area13 area13 cdm2)
(navigate_usv usv2 area1 area2)
(take_picture usv2 area2 disaster2)
(communicate_data usv2 cdm1 disaster2 area2 area1)
(navigate_uav uav4 area13 area9)
(take_picture uav4 area9 disaster5)
(communicate_data uav4 cdm2 disaster5 area9 area13)
(navigate_usv usv1 area1 area16)
(sample_water usv1 usv1store area16)
(pickup_box ugv1 ugv1store cdm1 area1 box3)
(pickup_box ugv3 ugv3store cdm2 area13 box2)
(navigate_usv usv1 area16 area1)
(drop_sample usv1 usv1store area1 area16 cdm1)
(navigate_ugv ugv1 area1 area3)
(navigate_ugv ugv1 area3 area5)
(navigate_ugv ugv1 area5 area11)
(drop_box ugv1 ugv1store area11 box3)
(pickup_box ugv2 ugv2store cdm1 area1 box1)
(navigate_ugv ugv2 area1 area3)
(navigate_ugv ugv2 area3 area4)
(navigate_ugv ugv2 area4 area10)
(drop_box ugv2 ugv2store area10 box1)
(navigate_uav uav1 area1 area17)
(navigate_usv usv3 area13 area9)
(take_picture uav1 area17 disaster3)
(navigate_uav uav1 area17 area10)
(communicate_data uav1 cdm2 disaster3 area10 area13)
(navigate_uav uav2 area1 area11)
(navigate_usv usv4 area13 area9)
(take_picture uav2 area11 disaster1)
(navigate_uav uav2 area11 area2)
(communicate_data uav2 cdm1 disaster1 area2 area1)
(navigate_uav uav3 area13 area7)
(take_picture uav3 area7 disaster6)
(navigate_uav uav3 area7 area1)
(communicate_data uav3 cdm1 disaster6 area1 area1)
(navigate_uav uav4 area9 area5)
(take_picture uav4 area5 disaster4)
(navigate_uav uav4 area5 area13)
(communicate_data uav4 cdm2 disaster4 area13 area13)
(navigate_ugv ugv3 area13 area10)
(navigate_ugv ugv3 area10 area4)
(navigate_ugv ugv3 area4 area3)
(navigate_ugv ugv3 area3 area15)
(navigate_ugv ugv3 area15 area18)
(navigate_ugv ugv3 area18 area20)
(drop_box ugv3 ugv3store area20 box2)
(navigate_usv usv3 area9 area4)
(navigate_usv usv3 area4 area5)
(sample_water usv3 usv3store area5)
(navigate_usv usv3 area5 area4)
(navigate_usv usv3 area4 area9)
(navigate_usv usv3 area9 area13)
(drop_sample usv3 usv3store area13 area5 cdm2)

